; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_sht3x_iic.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_sht3x_iic.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\MQTT -I..\..\Ethernet -I..\..\Ethernet\W5500 -I..\..\Internet\DHCP -I..\..\Internet\DNS -I..\..\User\app\src -I..\..\User\app\inc -I..\..\Internet\NTP -I..\..\Internet\HTTP -I.\RTE\_Flash -ID:\MDK5\ARM\CMSIS\5.0.1\CMSIS\Include -ID:\MDK5\Keil\STM32F1xx_DFP\2.0.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\bsp_sht3x_iic.crf ..\..\User\bsp\bsp_sht3x_iic.c]
                          THUMB

                          AREA ||i.IIC_Ack||, CODE, READONLY, ALIGN=2

                  IIC_Ack PROC
;;;54     //产生ACK应答
;;;55     void IIC_Ack(void)
000000  b510              PUSH     {r4,lr}
;;;56     {
;;;57     	IIC_SCL=0;
000002  2000              MOVS     r0,#0
000004  490f              LDR      r1,|L1.68|
000006  6008              STR      r0,[r1,#0]
;;;58     	SDA_OUT();
000008  480f              LDR      r0,|L1.72|
00000a  6800              LDR      r0,[r0,#0]
00000c  f0204070          BIC      r0,r0,#0xf0000000
000010  490d              LDR      r1,|L1.72|
000012  6008              STR      r0,[r1,#0]
000014  4608              MOV      r0,r1
000016  6800              LDR      r0,[r0,#0]
000018  f0405040          ORR      r0,r0,#0x30000000
00001c  6008              STR      r0,[r1,#0]
;;;59     	IIC_SDA=0;
00001e  2000              MOVS     r0,#0
000020  490a              LDR      r1,|L1.76|
000022  f8c1019c          STR      r0,[r1,#0x19c]
;;;60     	delay_us(2);
000026  2002              MOVS     r0,#2
000028  f7fffffe          BL       delay_us
;;;61     	IIC_SCL=1;
00002c  2001              MOVS     r0,#1
00002e  4905              LDR      r1,|L1.68|
000030  6008              STR      r0,[r1,#0]
;;;62     	delay_us(2);
000032  2002              MOVS     r0,#2
000034  f7fffffe          BL       delay_us
;;;63     	IIC_SCL=0;
000038  2000              MOVS     r0,#0
00003a  4904              LDR      r1,|L1.76|
00003c  f8c10198          STR      r0,[r1,#0x198]
;;;64     }
000040  bd10              POP      {r4,pc}
;;;65     //不产生ACK应答		    
                          ENDP

000042  0000              DCW      0x0000
                  |L1.68|
                          DCD      0x42218198
                  |L1.72|
                          DCD      0x40010c00
                  |L1.76|
                          DCD      0x42218000

                          AREA ||i.IIC_Init||, CODE, READONLY, ALIGN=2

                  IIC_Init PROC
;;;3      //初始化IIC
;;;4      void IIC_Init(void)
000000  480c              LDR      r0,|L2.52|
;;;5      {					     
;;;6       	RCC->APB2ENR|=1<<3;//先使能外设IO PORTB时钟 							 
000002  6980              LDR      r0,[r0,#0x18]
000004  f0400008          ORR      r0,r0,#8
000008  490a              LDR      r1,|L2.52|
00000a  6188              STR      r0,[r1,#0x18]
;;;7      	GPIOB->CRL&=0X00FFFFFF;//PB6/PB7 推挽输出
00000c  480a              LDR      r0,|L2.56|
00000e  6800              LDR      r0,[r0,#0]
000010  f020407f          BIC      r0,r0,#0xff000000
000014  4908              LDR      r1,|L2.56|
000016  6008              STR      r0,[r1,#0]
;;;8      	GPIOB->CRL|=0X33000000;	   
000018  4608              MOV      r0,r1
00001a  6800              LDR      r0,[r0,#0]
00001c  f040504c          ORR      r0,r0,#0x33000000
000020  6008              STR      r0,[r1,#0]
;;;9      	GPIOB->ODR|=3<<6;     //PB6,7 输出高
000022  4805              LDR      r0,|L2.56|
000024  300c              ADDS     r0,r0,#0xc
000026  6800              LDR      r0,[r0,#0]
000028  f04000c0          ORR      r0,r0,#0xc0
00002c  4902              LDR      r1,|L2.56|
00002e  310c              ADDS     r1,r1,#0xc
000030  6008              STR      r0,[r1,#0]
;;;10     }
000032  4770              BX       lr
;;;11     //产生IIC起始信号
                          ENDP

                  |L2.52|
                          DCD      0x40021000
                  |L2.56|
                          DCD      0x40010c00

                          AREA ||i.IIC_NAck||, CODE, READONLY, ALIGN=2

                  IIC_NAck PROC
;;;65     //不产生ACK应答		    
;;;66     void IIC_NAck(void)
000000  b510              PUSH     {r4,lr}
;;;67     {
;;;68     	IIC_SCL=0;
000002  2000              MOVS     r0,#0
000004  490f              LDR      r1,|L3.68|
000006  6008              STR      r0,[r1,#0]
;;;69     	SDA_OUT();
000008  480f              LDR      r0,|L3.72|
00000a  6800              LDR      r0,[r0,#0]
00000c  f0204070          BIC      r0,r0,#0xf0000000
000010  490d              LDR      r1,|L3.72|
000012  6008              STR      r0,[r1,#0]
000014  4608              MOV      r0,r1
000016  6800              LDR      r0,[r0,#0]
000018  f0405040          ORR      r0,r0,#0x30000000
00001c  6008              STR      r0,[r1,#0]
;;;70     	IIC_SDA=1;
00001e  2001              MOVS     r0,#1
000020  490a              LDR      r1,|L3.76|
000022  f8c1019c          STR      r0,[r1,#0x19c]
;;;71     	delay_us(2);
000026  2002              MOVS     r0,#2
000028  f7fffffe          BL       delay_us
;;;72     	IIC_SCL=1;
00002c  2001              MOVS     r0,#1
00002e  4905              LDR      r1,|L3.68|
000030  6008              STR      r0,[r1,#0]
;;;73     	delay_us(2);
000032  2002              MOVS     r0,#2
000034  f7fffffe          BL       delay_us
;;;74     	IIC_SCL=0;
000038  2000              MOVS     r0,#0
00003a  4904              LDR      r1,|L3.76|
00003c  f8c10198          STR      r0,[r1,#0x198]
;;;75     }					 				     
000040  bd10              POP      {r4,pc}
;;;76     //IIC发送一个字节
                          ENDP

000042  0000              DCW      0x0000
                  |L3.68|
                          DCD      0x42218198
                  |L3.72|
                          DCD      0x40010c00
                  |L3.76|
                          DCD      0x42218000

                          AREA ||i.IIC_Read_Byte||, CODE, READONLY, ALIGN=2

                  IIC_Read_Byte PROC
;;;96     //读1个字节，ack=1时，发送ACK，ack=0，发送nACK   
;;;97     u8 IIC_Read_Byte(unsigned char ack)
000000  b570              PUSH     {r4-r6,lr}
;;;98     {
000002  4605              MOV      r5,r0
;;;99     	unsigned char i,receive=0;
000004  2400              MOVS     r4,#0
;;;100    	SDA_IN();//SDA设置为输入
000006  4817              LDR      r0,|L4.100|
000008  6800              LDR      r0,[r0,#0]
00000a  f0204070          BIC      r0,r0,#0xf0000000
00000e  4915              LDR      r1,|L4.100|
000010  6008              STR      r0,[r1,#0]
000012  4608              MOV      r0,r1
000014  6800              LDR      r0,[r0,#0]
000016  f0404000          ORR      r0,r0,#0x80000000
00001a  6008              STR      r0,[r1,#0]
;;;101        for(i=0;i<8;i++ )
00001c  2600              MOVS     r6,#0
00001e  e016              B        |L4.78|
                  |L4.32|
;;;102    	{
;;;103            IIC_SCL=0; 
000020  2000              MOVS     r0,#0
000022  4911              LDR      r1,|L4.104|
000024  6008              STR      r0,[r1,#0]
;;;104            delay_us(2);
000026  2002              MOVS     r0,#2
000028  f7fffffe          BL       delay_us
;;;105    		    IIC_SCL=1;
00002c  2001              MOVS     r0,#1
00002e  490f              LDR      r1,|L4.108|
000030  f8c10198          STR      r0,[r1,#0x198]
;;;106            receive<<=1;
000034  0660              LSLS     r0,r4,#25
000036  0e04              LSRS     r4,r0,#24
;;;107            if(READ_SDA)receive++;   
000038  480b              LDR      r0,|L4.104|
00003a  387c              SUBS     r0,r0,#0x7c
00003c  6800              LDR      r0,[r0,#0]
00003e  b108              CBZ      r0,|L4.68|
000040  1c60              ADDS     r0,r4,#1
000042  b2c4              UXTB     r4,r0
                  |L4.68|
;;;108    		delay_us(1); 
000044  2001              MOVS     r0,#1
000046  f7fffffe          BL       delay_us
00004a  1c70              ADDS     r0,r6,#1              ;101
00004c  b2c6              UXTB     r6,r0                 ;101
                  |L4.78|
00004e  2e08              CMP      r6,#8                 ;101
000050  dbe6              BLT      |L4.32|
;;;109        }					 
;;;110        if (!ack)
000052  b915              CBNZ     r5,|L4.90|
;;;111            IIC_NAck();//发送nACK
000054  f7fffffe          BL       IIC_NAck
000058  e001              B        |L4.94|
                  |L4.90|
;;;112        else
;;;113            IIC_Ack(); //发送ACK   
00005a  f7fffffe          BL       IIC_Ack
                  |L4.94|
;;;114        return receive;
00005e  4620              MOV      r0,r4
;;;115    }
000060  bd70              POP      {r4-r6,pc}
;;;116    
                          ENDP

000062  0000              DCW      0x0000
                  |L4.100|
                          DCD      0x40010c00
                  |L4.104|
                          DCD      0x42218198
                  |L4.108|
                          DCD      0x42218000

                          AREA ||i.IIC_Send_Byte||, CODE, READONLY, ALIGN=2

                  IIC_Send_Byte PROC
;;;79     //0，无应答			  
;;;80     void IIC_Send_Byte(u8 txd)
000000  b570              PUSH     {r4-r6,lr}
;;;81     {                        
000002  4604              MOV      r4,r0
;;;82         u8 t;   
;;;83     	SDA_OUT(); 	    
000004  4815              LDR      r0,|L5.92|
000006  6800              LDR      r0,[r0,#0]
000008  f0204070          BIC      r0,r0,#0xf0000000
00000c  4913              LDR      r1,|L5.92|
00000e  6008              STR      r0,[r1,#0]
000010  4608              MOV      r0,r1
000012  6800              LDR      r0,[r0,#0]
000014  f0405040          ORR      r0,r0,#0x30000000
000018  6008              STR      r0,[r1,#0]
;;;84         IIC_SCL=0;//拉低时钟开始数据传输
00001a  2000              MOVS     r0,#0
00001c  4910              LDR      r1,|L5.96|
00001e  6008              STR      r0,[r1,#0]
;;;85         for(t=0;t<8;t++)
000020  2500              MOVS     r5,#0
000022  e017              B        |L5.84|
                  |L5.36|
;;;86         {              
;;;87             IIC_SDA=(txd&0x80)>>7;
000024  09e0              LSRS     r0,r4,#7
000026  490e              LDR      r1,|L5.96|
000028  1d09              ADDS     r1,r1,#4
00002a  6008              STR      r0,[r1,#0]
;;;88             txd<<=1; 	  
00002c  0660              LSLS     r0,r4,#25
00002e  0e04              LSRS     r4,r0,#24
;;;89     		delay_us(2);   //对TEA5767这三个延时都是必须的
000030  2002              MOVS     r0,#2
000032  f7fffffe          BL       delay_us
;;;90     		IIC_SCL=1;
000036  2001              MOVS     r0,#1
000038  490a              LDR      r1,|L5.100|
00003a  f8c10198          STR      r0,[r1,#0x198]
;;;91     		delay_us(2); 
00003e  2002              MOVS     r0,#2
000040  f7fffffe          BL       delay_us
;;;92     		IIC_SCL=0;	
000044  2000              MOVS     r0,#0
000046  4906              LDR      r1,|L5.96|
000048  6008              STR      r0,[r1,#0]
;;;93     		delay_us(2);
00004a  2002              MOVS     r0,#2
00004c  f7fffffe          BL       delay_us
000050  1c68              ADDS     r0,r5,#1              ;85
000052  b2c5              UXTB     r5,r0                 ;85
                  |L5.84|
000054  2d08              CMP      r5,#8                 ;85
000056  dbe5              BLT      |L5.36|
;;;94         }	 
;;;95     } 	    
000058  bd70              POP      {r4-r6,pc}
;;;96     //读1个字节，ack=1时，发送ACK，ack=0，发送nACK   
                          ENDP

00005a  0000              DCW      0x0000
                  |L5.92|
                          DCD      0x40010c00
                  |L5.96|
                          DCD      0x42218198
                  |L5.100|
                          DCD      0x42218000

                          AREA ||i.IIC_Start||, CODE, READONLY, ALIGN=2

                  IIC_Start PROC
;;;11     //产生IIC起始信号
;;;12     void IIC_Start(void)
000000  b510              PUSH     {r4,lr}
;;;13     {
;;;14     	SDA_OUT();     //sda线输出
000002  480f              LDR      r0,|L6.64|
000004  6800              LDR      r0,[r0,#0]
000006  f0204070          BIC      r0,r0,#0xf0000000
00000a  490d              LDR      r1,|L6.64|
00000c  6008              STR      r0,[r1,#0]
00000e  4608              MOV      r0,r1
000010  6800              LDR      r0,[r0,#0]
000012  f0405040          ORR      r0,r0,#0x30000000
000016  6008              STR      r0,[r1,#0]
;;;15     	IIC_SDA=1;	  	  
000018  2001              MOVS     r0,#1
00001a  490a              LDR      r1,|L6.68|
00001c  6008              STR      r0,[r1,#0]
;;;16     	IIC_SCL=1;
00001e  490a              LDR      r1,|L6.72|
000020  f8c10198          STR      r0,[r1,#0x198]
;;;17     	delay_us(4);
000024  2004              MOVS     r0,#4
000026  f7fffffe          BL       delay_us
;;;18      	IIC_SDA=0;//START:when CLK is high,DATA change form high to low 
00002a  2000              MOVS     r0,#0
00002c  4905              LDR      r1,|L6.68|
00002e  6008              STR      r0,[r1,#0]
;;;19     	delay_us(4);
000030  2004              MOVS     r0,#4
000032  f7fffffe          BL       delay_us
;;;20     	IIC_SCL=0;//钳住I2C总线，准备发送或接收数据 
000036  2000              MOVS     r0,#0
000038  4903              LDR      r1,|L6.72|
00003a  f8c10198          STR      r0,[r1,#0x198]
;;;21     }	  
00003e  bd10              POP      {r4,pc}
;;;22     //产生IIC停止信号
                          ENDP

                  |L6.64|
                          DCD      0x40010c00
                  |L6.68|
                          DCD      0x4221819c
                  |L6.72|
                          DCD      0x42218000

                          AREA ||i.IIC_Stop||, CODE, READONLY, ALIGN=2

                  IIC_Stop PROC
;;;22     //产生IIC停止信号
;;;23     void IIC_Stop(void)
000000  b510              PUSH     {r4,lr}
;;;24     {
;;;25     	SDA_OUT();//sda线输出
000002  480f              LDR      r0,|L7.64|
000004  6800              LDR      r0,[r0,#0]
000006  f0204070          BIC      r0,r0,#0xf0000000
00000a  490d              LDR      r1,|L7.64|
00000c  6008              STR      r0,[r1,#0]
00000e  4608              MOV      r0,r1
000010  6800              LDR      r0,[r0,#0]
000012  f0405040          ORR      r0,r0,#0x30000000
000016  6008              STR      r0,[r1,#0]
;;;26     	IIC_SCL=0;
000018  2000              MOVS     r0,#0
00001a  490a              LDR      r1,|L7.68|
00001c  6008              STR      r0,[r1,#0]
;;;27     	IIC_SDA=0;
00001e  490a              LDR      r1,|L7.72|
000020  f8c1019c          STR      r0,[r1,#0x19c]
;;;28      	delay_us(4); 
000024  2004              MOVS     r0,#4
000026  f7fffffe          BL       delay_us
;;;29     	IIC_SCL=1;//STOP:when CLK is high DATA change form low to high
00002a  2001              MOVS     r0,#1
00002c  4905              LDR      r1,|L7.68|
00002e  6008              STR      r0,[r1,#0]
;;;30      	delay_us(4); 
000030  2004              MOVS     r0,#4
000032  f7fffffe          BL       delay_us
;;;31     	IIC_SDA=1;//发送I2C总线结束信号 						   	
000036  2001              MOVS     r0,#1
000038  4903              LDR      r1,|L7.72|
00003a  f8c1019c          STR      r0,[r1,#0x19c]
;;;32     }
00003e  bd10              POP      {r4,pc}
;;;33     //等待应答信号到来
                          ENDP

                  |L7.64|
                          DCD      0x40010c00
                  |L7.68|
                          DCD      0x42218198
                  |L7.72|
                          DCD      0x42218000

                          AREA ||i.IIC_Wait_Ack||, CODE, READONLY, ALIGN=2

                  IIC_Wait_Ack PROC
;;;35     //        0，接收应答成功
;;;36     u8 IIC_Wait_Ack(void)
000000  b510              PUSH     {r4,lr}
;;;37     {
;;;38     	u8 ucErrTime=0;
000002  2400              MOVS     r4,#0
;;;39     	SDA_IN();      //SDA设置为输入  
000004  4814              LDR      r0,|L8.88|
000006  6800              LDR      r0,[r0,#0]
000008  f0204070          BIC      r0,r0,#0xf0000000
00000c  4912              LDR      r1,|L8.88|
00000e  6008              STR      r0,[r1,#0]
000010  4608              MOV      r0,r1
000012  6800              LDR      r0,[r0,#0]
000014  f0404000          ORR      r0,r0,#0x80000000
000018  6008              STR      r0,[r1,#0]
;;;40     	IIC_SDA=1;delay_us(1);	   
00001a  2001              MOVS     r0,#1
00001c  490f              LDR      r1,|L8.92|
00001e  6008              STR      r0,[r1,#0]
000020  f7fffffe          BL       delay_us
;;;41     	IIC_SCL=1;delay_us(1);	 
000024  2001              MOVS     r0,#1
000026  490e              LDR      r1,|L8.96|
000028  f8c10198          STR      r0,[r1,#0x198]
00002c  f7fffffe          BL       delay_us
;;;42     	while(READ_SDA)
000030  e007              B        |L8.66|
                  |L8.50|
;;;43     	{
;;;44     		ucErrTime++;
000032  1c60              ADDS     r0,r4,#1
000034  b2c4              UXTB     r4,r0
;;;45     		if(ucErrTime>250)
000036  2cfa              CMP      r4,#0xfa
000038  dd03              BLE      |L8.66|
;;;46     		{
;;;47     			IIC_Stop();
00003a  f7fffffe          BL       IIC_Stop
;;;48     			return 1;
00003e  2001              MOVS     r0,#1
                  |L8.64|
;;;49     		}
;;;50     	}
;;;51     	IIC_SCL=0;//时钟输出0 	   
;;;52     	return 0;  
;;;53     } 
000040  bd10              POP      {r4,pc}
                  |L8.66|
000042  4806              LDR      r0,|L8.92|
000044  3880              SUBS     r0,r0,#0x80           ;42
000046  6800              LDR      r0,[r0,#0]            ;42
000048  2800              CMP      r0,#0                 ;42
00004a  d1f2              BNE      |L8.50|
00004c  4903              LDR      r1,|L8.92|
00004e  1f09              SUBS     r1,r1,#4              ;51
000050  6008              STR      r0,[r1,#0]            ;51
000052  bf00              NOP                            ;52
000054  e7f4              B        |L8.64|
;;;54     //产生ACK应答
                          ENDP

000056  0000              DCW      0x0000
                  |L8.88|
                          DCD      0x40010c00
                  |L8.92|
                          DCD      0x4221819c
                  |L8.96|
                          DCD      0x42218000

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp\\bsp_sht3x_iic.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___15_bsp_sht3x_iic_c_IIC_Init____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___15_bsp_sht3x_iic_c_IIC_Init____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___15_bsp_sht3x_iic_c_IIC_Init____REVSH|
#line 128
|__asm___15_bsp_sht3x_iic_c_IIC_Init____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
