; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\mqttunsubscribeserver.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\mqttunsubscribeserver.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\MQTT -I..\..\Ethernet -I..\..\Ethernet\W5500 -I..\..\Internet\DHCP -I..\..\Internet\DNS -I..\..\User\app\src -I..\..\User\app\inc -I..\..\Internet\NTP -I..\..\Internet\HTTP -I.\RTE\_Flash -ID:\MDK5\ARM\CMSIS\5.0.1\CMSIS\Include -ID:\MDK5\Keil\STM32F1xx_DFP\2.0.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\mqttunsubscribeserver.crf ..\..\MQTT\MQTTUnsubscribeServer.c]
                          THUMB

                          AREA ||i.MQTTDeserialize_unsubscribe||, CODE, READONLY, ALIGN=1

                  MQTTDeserialize_unsubscribe PROC
;;;33       */
;;;34     int MQTTDeserialize_unsubscribe(unsigned char* dup, unsigned short* packetid, int maxcount, int* count, MQTTString topicFilters[],
000000  e92d4ffe          PUSH     {r1-r11,lr}
;;;35     		unsigned char* buf, int len)
;;;36     {
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
000008  461c              MOV      r4,r3
00000a  e9dd9b0d          LDRD     r9,r11,[sp,#0x34]
00000e  f8dd8030          LDR      r8,[sp,#0x30]
;;;37     	MQTTHeader header = {0};
000012  2000              MOVS     r0,#0
000014  9002              STR      r0,[sp,#8]
;;;38     	unsigned char* curdata = buf;
000016  f8cd9004          STR      r9,[sp,#4]
;;;39     	unsigned char* enddata = NULL;
00001a  2700              MOVS     r7,#0
;;;40     	int rc = 0;
00001c  4682              MOV      r10,r0
;;;41     	int mylen = 0;
00001e  9000              STR      r0,[sp,#0]
;;;42     
;;;43     	FUNC_ENTRY;
;;;44     	header.byte = readChar(&curdata);
000020  a801              ADD      r0,sp,#4
000022  f7fffffe          BL       readChar
000026  f88d0008          STRB     r0,[sp,#8]
;;;45     	if (header.bits.type != UNSUBSCRIBE)
00002a  9802              LDR      r0,[sp,#8]
00002c  f3c01003          UBFX     r0,r0,#4,#4
000030  280a              CMP      r0,#0xa
000032  d000              BEQ      |L1.54|
;;;46     		goto exit;
000034  e029              B        |L1.138|
                  |L1.54|
;;;47     	*dup = header.bits.dup;
000036  9802              LDR      r0,[sp,#8]
000038  f3c000c0          UBFX     r0,r0,#3,#1
00003c  7028              STRB     r0,[r5,#0]
;;;48     
;;;49     	curdata += (rc = MQTTPacket_decodeBuf(curdata, &mylen)); /* read remaining length */
00003e  4669              MOV      r1,sp
000040  9801              LDR      r0,[sp,#4]
000042  f7fffffe          BL       MQTTPacket_decodeBuf
000046  4682              MOV      r10,r0
000048  9901              LDR      r1,[sp,#4]
00004a  4408              ADD      r0,r0,r1
00004c  9001              STR      r0,[sp,#4]
;;;50     	enddata = curdata + mylen;
00004e  e9dd1000          LDRD     r1,r0,[sp,#0]
000052  1847              ADDS     r7,r0,r1
;;;51     
;;;52     	*packetid = readInt(&curdata);
000054  a801              ADD      r0,sp,#4
000056  f7fffffe          BL       readInt
00005a  8030              STRH     r0,[r6,#0]
;;;53     
;;;54     	*count = 0;
00005c  2000              MOVS     r0,#0
00005e  6020              STR      r0,[r4,#0]
;;;55     	while (curdata < enddata)
000060  e00d              B        |L1.126|
                  |L1.98|
;;;56     	{
;;;57     		if (!readMQTTLenString(&topicFilters[*count], &curdata, enddata))
000062  6821              LDR      r1,[r4,#0]
000064  eb010141          ADD      r1,r1,r1,LSL #1
000068  eb080081          ADD      r0,r8,r1,LSL #2
00006c  463a              MOV      r2,r7
00006e  a901              ADD      r1,sp,#4
000070  f7fffffe          BL       readMQTTLenString
000074  b900              CBNZ     r0,|L1.120|
;;;58     			goto exit;
000076  e008              B        |L1.138|
                  |L1.120|
;;;59     		(*count)++;
000078  6820              LDR      r0,[r4,#0]
00007a  1c40              ADDS     r0,r0,#1
00007c  6020              STR      r0,[r4,#0]
                  |L1.126|
00007e  9801              LDR      r0,[sp,#4]            ;55
000080  42b8              CMP      r0,r7                 ;55
000082  d3ee              BCC      |L1.98|
;;;60     	}
;;;61     
;;;62     	rc = 1;
000084  f04f0a01          MOV      r10,#1
;;;63     exit:
000088  bf00              NOP      
                  |L1.138|
;;;64     	FUNC_EXIT_RC(rc);
;;;65     	return rc;
00008a  4650              MOV      r0,r10
;;;66     }
00008c  e8bd8ffe          POP      {r1-r11,pc}
;;;67     
                          ENDP


                          AREA ||i.MQTTSerialize_unsuback||, CODE, READONLY, ALIGN=1

                  MQTTSerialize_unsuback PROC
;;;75       */
;;;76     int MQTTSerialize_unsuback(unsigned char* buf, int buflen, unsigned short packetid)
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;77     {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
;;;78     	MQTTHeader header = {0};
00000a  2000              MOVS     r0,#0
00000c  9001              STR      r0,[sp,#4]
;;;79     	int rc = 0;
00000e  2700              MOVS     r7,#0
;;;80     	unsigned char *ptr = buf;
000010  9400              STR      r4,[sp,#0]
;;;81     
;;;82     	FUNC_ENTRY;
;;;83     	if (buflen < 2)
000012  2d02              CMP      r5,#2
000014  da01              BGE      |L2.26|
;;;84     	{
;;;85     		rc = MQTTPACKET_BUFFER_TOO_SHORT;
000016  1e87              SUBS     r7,r0,#2
;;;86     		goto exit;
000018  e01a              B        |L2.80|
                  |L2.26|
;;;87     	}
;;;88     	header.byte = 0;
00001a  2000              MOVS     r0,#0
00001c  f88d0004          STRB     r0,[sp,#4]
;;;89     	header.bits.type = UNSUBACK;
000020  9801              LDR      r0,[sp,#4]
000022  f02000f0          BIC      r0,r0,#0xf0
000026  30b0              ADDS     r0,r0,#0xb0
000028  9001              STR      r0,[sp,#4]
;;;90     	writeChar(&ptr, header.byte); /* write header */
00002a  f89d1004          LDRB     r1,[sp,#4]
00002e  4668              MOV      r0,sp
000030  f7fffffe          BL       writeChar
;;;91     
;;;92     	ptr += MQTTPacket_encode(ptr, 2); /* write remaining length */
000034  2102              MOVS     r1,#2
000036  9800              LDR      r0,[sp,#0]
000038  f7fffffe          BL       MQTTPacket_encode
00003c  9900              LDR      r1,[sp,#0]
00003e  4408              ADD      r0,r0,r1
000040  9000              STR      r0,[sp,#0]
;;;93     
;;;94     	writeInt(&ptr, packetid);
000042  4631              MOV      r1,r6
000044  4668              MOV      r0,sp
000046  f7fffffe          BL       writeInt
;;;95     
;;;96     	rc = ptr - buf;
00004a  9800              LDR      r0,[sp,#0]
00004c  1b07              SUBS     r7,r0,r4
;;;97     exit:
00004e  bf00              NOP      
                  |L2.80|
;;;98     	FUNC_EXIT_RC(rc);
;;;99     	return rc;
000050  4638              MOV      r0,r7
;;;100    }
000052  e8bd81fc          POP      {r2-r8,pc}
;;;101    
                          ENDP

