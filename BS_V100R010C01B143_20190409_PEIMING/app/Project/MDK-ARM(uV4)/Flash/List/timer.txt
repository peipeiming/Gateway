; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\timer.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\timer.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\MQTT -I..\..\Ethernet -I..\..\Ethernet\W5500 -I..\..\Internet\DHCP -I..\..\Internet\DNS -I..\..\User\app\src -I..\..\User\app\inc -I..\..\Internet\NTP -I..\..\Internet\HTTP -I.\RTE\_Flash -ID:\MDK5\ARM\CMSIS\5.0.1\CMSIS\Include -ID:\MDK5\Keil\STM32F1xx_DFP\2.0.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\timer.crf ..\..\User\bsp\src\timer.c]
                          THUMB

                          AREA ||i.Timer_Config||, CODE, READONLY, ALIGN=2

                  Timer_Config PROC
;;;28       */
;;;29     void Timer_Config(void)
000000  b50e              PUSH     {r1-r3,lr}
;;;30     {
;;;31     	TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
;;;32     
;;;33     	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3|RCC_APB1Periph_TIM2, ENABLE); 
000002  2101              MOVS     r1,#1
000004  2003              MOVS     r0,#3
000006  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;34     
;;;35     	TIM_DeInit(TIM3);                              					//复位TIM3定时器
00000a  4827              LDR      r0,|L1.168|
00000c  f7fffffe          BL       TIM_DeInit
;;;36     	TIM_DeInit(TIM2);
000010  f04f4080          MOV      r0,#0x40000000
000014  f7fffffe          BL       TIM_DeInit
;;;37     	
;;;38     	/* TIM3 configuration */
;;;39     	TIM_TimeBaseStructure.TIM_Period = 200;        					// 100ms    
000018  20c8              MOVS     r0,#0xc8
00001a  f8ad0004          STRH     r0,[sp,#4]
;;;40     	TIM_TimeBaseStructure.TIM_Prescaler = 36000;    				// 分频36000        
00001e  f64840a0          MOV      r0,#0x8ca0
000022  f8ad0000          STRH     r0,[sp,#0]
;;;41     	TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1;  		// 时钟分频 
000026  2000              MOVS     r0,#0
000028  f8ad0006          STRH     r0,[sp,#6]
;;;42     	TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  	//计数方向向上计数
00002c  f8ad0002          STRH     r0,[sp,#2]
;;;43     	TIM_TimeBaseInit(TIM3, &TIM_TimeBaseStructure);
000030  4669              MOV      r1,sp
000032  481d              LDR      r0,|L1.168|
000034  f7fffffe          BL       TIM_TimeBaseInit
;;;44     
;;;45     	/* Clear TIM3 update pending flag[清除TIM3溢出中断标志] */
;;;46     	TIM_ClearFlag(TIM3, TIM_FLAG_Update);
000038  2101              MOVS     r1,#1
00003a  481b              LDR      r0,|L1.168|
00003c  f7fffffe          BL       TIM_ClearFlag
;;;47     
;;;48     	/* Enable TIM3 Update interrupt [TIM3溢出中断允许]*/
;;;49     	TIM_ITConfig(TIM3, TIM_IT_Update, ENABLE); 
000040  2201              MOVS     r2,#1
000042  4611              MOV      r1,r2
000044  4818              LDR      r0,|L1.168|
000046  f7fffffe          BL       TIM_ITConfig
;;;50     	/* TIM3计数器清零*/
;;;51     	TIM3->CNT=0;
00004a  2000              MOVS     r0,#0
00004c  4916              LDR      r1,|L1.168|
00004e  3124              ADDS     r1,r1,#0x24
000050  8008              STRH     r0,[r1,#0]
;;;52     	/* TIM3 enable counter [允许TIM3计数]*/
;;;53     	TIM_Cmd(TIM3, DISABLE);  
000052  2100              MOVS     r1,#0
000054  4814              LDR      r0,|L1.168|
000056  f7fffffe          BL       TIM_Cmd
;;;54     	/*Config interrupts*/
;;;55     
;;;56     
;;;57     	/* TIM2 configuration   按键定时器*/
;;;58     	TIM_TimeBaseStructure.TIM_Period = 1000-1;        //10 				 
00005a  f24030e7          MOV      r0,#0x3e7
00005e  f8ad0004          STRH     r0,[sp,#4]
;;;59     	TIM_TimeBaseStructure.TIM_Prescaler = 6400-1;    	//104		  	  
000062  f64100ff          MOV      r0,#0x18ff
000066  f8ad0000          STRH     r0,[sp,#0]
;;;60     	TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1;  		// 时钟分频 
00006a  2000              MOVS     r0,#0
00006c  f8ad0006          STRH     r0,[sp,#6]
;;;61     	TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  	//计数方向向上计数
000070  f8ad0002          STRH     r0,[sp,#2]
;;;62     	TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);
000074  4669              MOV      r1,sp
000076  f04f4080          MOV      r0,#0x40000000
00007a  f7fffffe          BL       TIM_TimeBaseInit
;;;63     
;;;64     	/* Clear TIM2 update pending flag[清除TIM2溢出中断标志] */
;;;65     	TIM_ClearFlag(TIM2, TIM_FLAG_Update);
00007e  2101              MOVS     r1,#1
000080  0788              LSLS     r0,r1,#30
000082  f7fffffe          BL       TIM_ClearFlag
;;;66     
;;;67     	/* Enable TIM2 Update interrupt [TIM2溢出中断允许]*/
;;;68     	TIM_ITConfig(TIM2, TIM_IT_Update, ENABLE); 
000086  2201              MOVS     r2,#1
000088  4611              MOV      r1,r2
00008a  0790              LSLS     r0,r2,#30
00008c  f7fffffe          BL       TIM_ITConfig
;;;69     	/* TIM2计数器清零*/
;;;70     	TIM2->CNT=0;
000090  2000              MOVS     r0,#0
000092  f04f4180          MOV      r1,#0x40000000
000096  8488              STRH     r0,[r1,#0x24]
;;;71     	/* TIM3 enable counter [允许TIM2计数]*/
;;;72     	TIM_Cmd(TIM2, DISABLE);  
000098  2100              MOVS     r1,#0
00009a  f04f4080          MOV      r0,#0x40000000
00009e  f7fffffe          BL       TIM_Cmd
;;;73     	/*Config interrupts*/
;;;74     		
;;;75     	Timer_Interrupts_Config();
0000a2  f7fffffe          BL       Timer_Interrupts_Config
;;;76     }
0000a6  bd0e              POP      {r1-r3,pc}
;;;77     
                          ENDP

                  |L1.168|
                          DCD      0x40000400

                          AREA ||i.Timer_Interrupts_Config||, CODE, READONLY, ALIGN=1

                  Timer_Interrupts_Config PROC
;;;7        */
;;;8      void Timer_Interrupts_Config(void)
000000  b508              PUSH     {r3,lr}
;;;9      {
;;;10     	NVIC_InitTypeDef  NVIC_InitStructure;
;;;11     	NVIC_InitStructure.NVIC_IRQChannel = TIM3_IRQn;
000002  201d              MOVS     r0,#0x1d
000004  f88d0000          STRB     r0,[sp,#0]
;;;12     	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;
000008  2001              MOVS     r0,#1
00000a  f88d0001          STRB     r0,[sp,#1]
;;;13     	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0; 
00000e  2000              MOVS     r0,#0
000010  f88d0002          STRB     r0,[sp,#2]
;;;14     	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
000014  2001              MOVS     r0,#1
000016  f88d0003          STRB     r0,[sp,#3]
;;;15     	NVIC_Init(&NVIC_InitStructure);
00001a  4668              MOV      r0,sp
00001c  f7fffffe          BL       NVIC_Init
;;;16     	
;;;17     	NVIC_InitStructure.NVIC_IRQChannel = TIM2_IRQn;
000020  201c              MOVS     r0,#0x1c
000022  f88d0000          STRB     r0,[sp,#0]
;;;18     	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 8;
000026  2008              MOVS     r0,#8
000028  f88d0001          STRB     r0,[sp,#1]
;;;19     	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0; 
00002c  2000              MOVS     r0,#0
00002e  f88d0002          STRB     r0,[sp,#2]
;;;20     	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
000032  2001              MOVS     r0,#1
000034  f88d0003          STRB     r0,[sp,#3]
;;;21     	NVIC_Init(&NVIC_InitStructure);
000038  4668              MOV      r0,sp
00003a  f7fffffe          BL       NVIC_Init
;;;22     }
00003e  bd08              POP      {r3,pc}
;;;23     
                          ENDP


                          AREA ||i.Timer_Start||, CODE, READONLY, ALIGN=2

                  Timer_Start PROC
;;;84       */
;;;85     void Timer_Start(void)
000000  b510              PUSH     {r4,lr}
;;;86     {
;;;87     	TIM3->CNT=0;//清除计数器寄存器的值，可以减小丢帧的情况
000002  2000              MOVS     r0,#0
000004  4903              LDR      r1,|L3.20|
000006  8008              STRH     r0,[r1,#0]
;;;88       /* Enable the TIM Counter */
;;;89     	TIM_Cmd(TIM3, ENABLE); 
000008  2101              MOVS     r1,#1
00000a  4802              LDR      r0,|L3.20|
00000c  3824              SUBS     r0,r0,#0x24
00000e  f7fffffe          BL       TIM_Cmd
;;;90     }
000012  bd10              POP      {r4,pc}
;;;91     
                          ENDP

                  |L3.20|
                          DCD      0x40000424

                          AREA ||i.Timer_Stop||, CODE, READONLY, ALIGN=2

                  Timer_Stop PROC
;;;96       */
;;;97     void Timer_Stop(void)
000000  b510              PUSH     {r4,lr}
;;;98     { 
;;;99       /* Disable the TIM Counter */
;;;100    	TIM_Cmd(TIM3, DISABLE);
000002  2100              MOVS     r1,#0
000004  4801              LDR      r0,|L4.12|
000006  f7fffffe          BL       TIM_Cmd
;;;101    }
00000a  bd10              POP      {r4,pc}
;;;102    
                          ENDP

                  |L4.12|
                          DCD      0x40000400

                          AREA ||i.key_timer_Start||, CODE, READONLY, ALIGN=1

                  key_timer_Start PROC
;;;107      */
;;;108    void key_timer_Start(void)
000000  b510              PUSH     {r4,lr}
;;;109    {
;;;110    	TIM2->CNT=0;//清除计数器寄存器的值，可以减小丢帧的情况
000002  2000              MOVS     r0,#0
000004  f04f4180          MOV      r1,#0x40000000
000008  8488              STRH     r0,[r1,#0x24]
;;;111      /* Enable the TIM Counter */
;;;112    	TIM_Cmd(TIM2, ENABLE); 
00000a  2101              MOVS     r1,#1
00000c  0788              LSLS     r0,r1,#30
00000e  f7fffffe          BL       TIM_Cmd
;;;113    }
000012  bd10              POP      {r4,pc}
;;;114    
                          ENDP


                          AREA ||i.key_timer_Stop||, CODE, READONLY, ALIGN=1

                  key_timer_Stop PROC
;;;119      */
;;;120    void key_timer_Stop(void)
000000  b510              PUSH     {r4,lr}
;;;121    { 
;;;122      /* Disable the TIM Counter */
;;;123    	TIM_Cmd(TIM2, DISABLE);
000002  2100              MOVS     r1,#0
000004  f04f4080          MOV      r0,#0x40000000
000008  f7fffffe          BL       TIM_Cmd
;;;124    }
00000c  bd10              POP      {r4,pc}
;;;125    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp\\src\\timer.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_timer_c_c9c27fde____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___7_timer_c_c9c27fde____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_timer_c_c9c27fde____REVSH|
#line 128
|__asm___7_timer_c_c9c27fde____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
