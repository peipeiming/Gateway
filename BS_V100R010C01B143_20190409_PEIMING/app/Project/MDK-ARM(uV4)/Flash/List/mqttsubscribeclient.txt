; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\mqttsubscribeclient.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\mqttsubscribeclient.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\MQTT -I..\..\Ethernet -I..\..\Ethernet\W5500 -I..\..\Internet\DHCP -I..\..\Internet\DNS -I..\..\User\app\src -I..\..\User\app\inc -I..\..\Internet\NTP -I..\..\Internet\HTTP -I.\RTE\_Flash -ID:\MDK5\ARM\CMSIS\5.0.1\CMSIS\Include -ID:\MDK5\Keil\STM32F1xx_DFP\2.0.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\mqttsubscribeclient.crf ..\..\MQTT\MQTTSubscribeClient.c]
                          THUMB

                          AREA ||i.MQTTDeserialize_suback||, CODE, READONLY, ALIGN=1

                  MQTTDeserialize_suback PROC
;;;99       */
;;;100    int MQTTDeserialize_suback(unsigned short* packetid, int maxcount, int* count, int grantedQoSs[], unsigned char* buf, int buflen)
000000  e92d4ffe          PUSH     {r1-r11,lr}
;;;101    {
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
000008  4614              MOV      r4,r2
00000a  461f              MOV      r7,r3
00000c  e9dd9b0c          LDRD     r9,r11,[sp,#0x30]
;;;102    	MQTTHeader header = {0};
000010  2000              MOVS     r0,#0
000012  9002              STR      r0,[sp,#8]
;;;103    	unsigned char* curdata = buf;
000014  f8cd9004          STR      r9,[sp,#4]
;;;104    	unsigned char* enddata = NULL;
000018  4680              MOV      r8,r0
;;;105    	int rc = 0;
00001a  4682              MOV      r10,r0
;;;106    	int mylen;
;;;107    
;;;108    	FUNC_ENTRY;
;;;109    	header.byte = readChar(&curdata);
00001c  a801              ADD      r0,sp,#4
00001e  f7fffffe          BL       readChar
000022  f88d0008          STRB     r0,[sp,#8]
;;;110    	if (header.bits.type != SUBACK)
000026  9802              LDR      r0,[sp,#8]
000028  f3c01003          UBFX     r0,r0,#4,#4
00002c  2809              CMP      r0,#9
00002e  d000              BEQ      |L1.50|
;;;111    		goto exit;
000030  e02c              B        |L1.140|
                  |L1.50|
;;;112    
;;;113    	curdata += (rc = MQTTPacket_decodeBuf(curdata, &mylen)); /* read remaining length */
000032  4669              MOV      r1,sp
000034  9801              LDR      r0,[sp,#4]
000036  f7fffffe          BL       MQTTPacket_decodeBuf
00003a  4682              MOV      r10,r0
00003c  9901              LDR      r1,[sp,#4]
00003e  4408              ADD      r0,r0,r1
000040  9001              STR      r0,[sp,#4]
;;;114    	enddata = curdata + mylen;
000042  e9dd1000          LDRD     r1,r0,[sp,#0]
000046  eb000801          ADD      r8,r0,r1
;;;115    	if (enddata - curdata < 2)
00004a  9801              LDR      r0,[sp,#4]
00004c  eba80000          SUB      r0,r8,r0
000050  2802              CMP      r0,#2
000052  da00              BGE      |L1.86|
;;;116    		goto exit;
000054  e01a              B        |L1.140|
                  |L1.86|
;;;117    
;;;118    	*packetid = readInt(&curdata);
000056  a801              ADD      r0,sp,#4
000058  f7fffffe          BL       readInt
00005c  8028              STRH     r0,[r5,#0]
;;;119    
;;;120    	*count = 0;
00005e  2000              MOVS     r0,#0
000060  6020              STR      r0,[r4,#0]
;;;121    	while (curdata < enddata)
000062  e00d              B        |L1.128|
                  |L1.100|
;;;122    	{
;;;123    		if (*count > maxcount)
000064  6820              LDR      r0,[r4,#0]
000066  42b0              CMP      r0,r6
000068  dd02              BLE      |L1.112|
;;;124    		{
;;;125    			rc = -1;
00006a  f04f3aff          MOV      r10,#0xffffffff
;;;126    			goto exit;
00006e  e00d              B        |L1.140|
                  |L1.112|
;;;127    		}
;;;128    		grantedQoSs[(*count)++] = readChar(&curdata);
000070  a801              ADD      r0,sp,#4
000072  f7fffffe          BL       readChar
000076  6822              LDR      r2,[r4,#0]
000078  1c51              ADDS     r1,r2,#1
00007a  6021              STR      r1,[r4,#0]
00007c  f8470022          STR      r0,[r7,r2,LSL #2]
                  |L1.128|
000080  9801              LDR      r0,[sp,#4]            ;121
000082  4540              CMP      r0,r8                 ;121
000084  d3ee              BCC      |L1.100|
;;;129    	}
;;;130    
;;;131    	rc = 1;
000086  f04f0a01          MOV      r10,#1
;;;132    exit:
00008a  bf00              NOP      
                  |L1.140|
;;;133    	FUNC_EXIT_RC(rc);
;;;134    	return rc;
00008c  4650              MOV      r0,r10
;;;135    }
00008e  e8bd8ffe          POP      {r1-r11,pc}
;;;136    
                          ENDP


                          AREA ||i.MQTTSerialize_subscribe||, CODE, READONLY, ALIGN=1

                  MQTTSerialize_subscribe PROC
;;;49       */
;;;50     int MQTTSerialize_subscribe(unsigned char* buf, int buflen, unsigned char dup, unsigned short packetid, int count,
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;51     		MQTTString topicFilters[], int requestedQoSs[])
;;;52     {
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
000008  4617              MOV      r7,r2
00000a  4698              MOV      r8,r3
00000c  e9dd9a0e          LDRD     r9,r10,[sp,#0x38]
;;;53     	unsigned char *ptr = buf;
000010  9503              STR      r5,[sp,#0xc]
;;;54     	MQTTHeader header = {0};
000012  2000              MOVS     r0,#0
000014  9002              STR      r0,[sp,#8]
;;;55     	int rem_len = 0;
000016  9001              STR      r0,[sp,#4]
;;;56     	int rc = 0;
000018  9000              STR      r0,[sp,#0]
;;;57     	int i = 0;
00001a  2400              MOVS     r4,#0
;;;58     
;;;59     	FUNC_ENTRY;
;;;60     	if (MQTTPacket_len(rem_len = MQTTSerialize_subscribeLength(count, topicFilters)) > buflen)
00001c  4651              MOV      r1,r10
00001e  4648              MOV      r0,r9
000020  f7fffffe          BL       MQTTSerialize_subscribeLength
000024  4683              MOV      r11,r0
000026  9001              STR      r0,[sp,#4]
000028  f7fffffe          BL       MQTTPacket_len
00002c  42b0              CMP      r0,r6
00002e  dd02              BLE      |L2.54|
;;;61     	{
;;;62     		rc = MQTTPACKET_BUFFER_TOO_SHORT;
000030  1ea0              SUBS     r0,r4,#2
000032  9000              STR      r0,[sp,#0]
;;;63     		goto exit;
000034  e038              B        |L2.168|
                  |L2.54|
;;;64     	}
;;;65     
;;;66     	header.byte = 0;
000036  2000              MOVS     r0,#0
000038  f88d0008          STRB     r0,[sp,#8]
;;;67     	header.bits.type = SUBSCRIBE;
00003c  9802              LDR      r0,[sp,#8]
00003e  f02000f0          BIC      r0,r0,#0xf0
000042  3080              ADDS     r0,r0,#0x80
000044  9002              STR      r0,[sp,#8]
;;;68     	header.bits.dup = dup;
000046  9802              LDR      r0,[sp,#8]
000048  f36700c3          BFI      r0,r7,#3,#1
00004c  9002              STR      r0,[sp,#8]
;;;69     	header.bits.qos = 1;
00004e  9802              LDR      r0,[sp,#8]
000050  f0200006          BIC      r0,r0,#6
000054  1c80              ADDS     r0,r0,#2
000056  9002              STR      r0,[sp,#8]
;;;70     	writeChar(&ptr, header.byte); /* write header */
000058  f89d1008          LDRB     r1,[sp,#8]
00005c  a803              ADD      r0,sp,#0xc
00005e  f7fffffe          BL       writeChar
;;;71     
;;;72     	ptr += MQTTPacket_encode(ptr, rem_len); /* write remaining length */;
000062  9901              LDR      r1,[sp,#4]
000064  9803              LDR      r0,[sp,#0xc]
000066  f7fffffe          BL       MQTTPacket_encode
00006a  9903              LDR      r1,[sp,#0xc]
00006c  4408              ADD      r0,r0,r1
00006e  9003              STR      r0,[sp,#0xc]
;;;73     
;;;74     	writeInt(&ptr, packetid);
000070  4641              MOV      r1,r8
000072  a803              ADD      r0,sp,#0xc
000074  f7fffffe          BL       writeInt
;;;75     
;;;76     	for (i = 0; i < count; ++i)
000078  2400              MOVS     r4,#0
00007a  e00f              B        |L2.156|
                  |L2.124|
;;;77     	{
;;;78     		writeMQTTString(&ptr, topicFilters[i]);
00007c  eb040044          ADD      r0,r4,r4,LSL #1
000080  eb0a0c80          ADD      r12,r10,r0,LSL #2
000084  a803              ADD      r0,sp,#0xc
000086  e89c000e          LDM      r12,{r1-r3}
00008a  f7fffffe          BL       writeMQTTString
;;;79     		writeChar(&ptr, requestedQoSs[i]);
00008e  9810              LDR      r0,[sp,#0x40]
000090  f8101024          LDRB     r1,[r0,r4,LSL #2]
000094  a803              ADD      r0,sp,#0xc
000096  f7fffffe          BL       writeChar
00009a  1c64              ADDS     r4,r4,#1              ;76
                  |L2.156|
00009c  454c              CMP      r4,r9                 ;76
00009e  dbed              BLT      |L2.124|
;;;80     	}
;;;81     
;;;82     	rc = ptr - buf;
0000a0  9803              LDR      r0,[sp,#0xc]
0000a2  1b40              SUBS     r0,r0,r5
0000a4  9000              STR      r0,[sp,#0]
;;;83     exit:
0000a6  bf00              NOP      
                  |L2.168|
;;;84     	FUNC_EXIT_RC(rc);
;;;85     	return rc;
0000a8  9800              LDR      r0,[sp,#0]
;;;86     }
0000aa  b004              ADD      sp,sp,#0x10
0000ac  e8bd9ff0          POP      {r4-r12,pc}
;;;87     
                          ENDP


                          AREA ||i.MQTTSerialize_subscribeLength||, CODE, READONLY, ALIGN=1

                  MQTTSerialize_subscribeLength PROC
;;;27       */
;;;28     int MQTTSerialize_subscribeLength(int count, MQTTString topicFilters[])
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;29     {
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
;;;30     	int i;
;;;31     	int len = 2; /* packetid */
000008  2702              MOVS     r7,#2
;;;32     
;;;33     	for (i = 0; i < count; ++i)
00000a  2400              MOVS     r4,#0
00000c  e00a              B        |L3.36|
                  |L3.14|
;;;34     		len += 2 + MQTTstrlen(topicFilters[i]) + 1; /* length + topic + req_qos */
00000e  eb040044          ADD      r0,r4,r4,LSL #1
000012  eb060380          ADD      r3,r6,r0,LSL #2
000016  e8930007          LDM      r3,{r0-r2}
00001a  f7fffffe          BL       MQTTstrlen
00001e  1cc0              ADDS     r0,r0,#3
000020  4407              ADD      r7,r7,r0
000022  1c64              ADDS     r4,r4,#1              ;33
                  |L3.36|
000024  42ac              CMP      r4,r5                 ;33
000026  dbf2              BLT      |L3.14|
;;;35     	return len;
000028  4638              MOV      r0,r7
;;;36     }
00002a  e8bd81f0          POP      {r4-r8,pc}
;;;37     
                          ENDP

