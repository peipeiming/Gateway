; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\stm32f10x_it.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\stm32f10x_it.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\MQTT -I..\..\Ethernet -I..\..\Ethernet\W5500 -I..\..\Internet\DHCP -I..\..\Internet\DNS -I..\..\User\app\src -I..\..\User\app\inc -I..\..\Internet\NTP -I..\..\Internet\HTTP -I.\RTE\_Flash -ID:\MDK5\ARM\CMSIS\5.0.1\CMSIS\Include -ID:\MDK5\Keil\STM32F1xx_DFP\2.0.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\stm32f10x_it.crf ..\..\User\bsp\stm32f10x_it.c]
                          THUMB

                          AREA ||i.BusFault_Handler||, CODE, READONLY, ALIGN=1

                  BusFault_Handler PROC
;;;101    */    
;;;102    void BusFault_Handler(void)
000000  bf00              NOP      
                  |L1.2|
;;;103    {
;;;104      /* 当总线异常时进入死循环 */
;;;105      while (1)
000002  e7fe              B        |L1.2|
;;;106      {
;;;107      }
;;;108    }
;;;109    
                          ENDP


                          AREA ||i.DebugMon_Handler||, CODE, READONLY, ALIGN=1

                  DebugMon_Handler PROC
;;;133    */   
;;;134    void DebugMon_Handler(void)
000000  4770              BX       lr
;;;135    {
;;;136    }
;;;137    
                          ENDP


                          AREA ||i.HardFault_Handler||, CODE, READONLY, ALIGN=2

                  HardFault_Handler PROC
;;;59     */ 
;;;60     void HardFault_Handler(void)
000000  a109              ADR      r1,|L3.40|
;;;61     {
;;;62       const char *pError = ERR_INFO;
;;;63       uint8_t i;
;;;64     
;;;65       for (i = 0; i < sizeof(ERR_INFO); i++)
000002  2000              MOVS     r0,#0
000004  e00c              B        |L3.32|
                  |L3.6|
;;;66       {
;;;67          USART1->DR = pError[i];
000006  5c0a              LDRB     r2,[r1,r0]
000008  4b12              LDR      r3,|L3.84|
00000a  801a              STRH     r2,[r3,#0]
;;;68          /* 等待发送结束 */
;;;69          while ((USART1->SR & USART_FLAG_TC) == (uint16_t)RESET);
00000c  bf00              NOP      
                  |L3.14|
00000e  4a11              LDR      r2,|L3.84|
000010  1f12              SUBS     r2,r2,#4
000012  8812              LDRH     r2,[r2,#0]
000014  f0020240          AND      r2,r2,#0x40
000018  2a00              CMP      r2,#0
00001a  d0f8              BEQ      |L3.14|
00001c  1c42              ADDS     r2,r0,#1              ;65
00001e  b2d0              UXTB     r0,r2                 ;65
                  |L3.32|
000020  282a              CMP      r0,#0x2a              ;65
000022  d3f0              BCC      |L3.6|
;;;70       }
;;;71       /* 当硬件失效异常发生时进入死循环 */
;;;72       while (1)
000024  bf00              NOP      
                  |L3.38|
000026  e7fe              B        |L3.38|
;;;73       {
;;;74       }
;;;75     }
;;;76     
                          ENDP

                  |L3.40|
000028  0d0a456e          DCB      "\r\nEnter HardFault_Handler, System Halt.\r\n",0
00002c  74657220
000030  48617264
000034  4661756c
000038  745f4861
00003c  6e646c65
000040  722c2053
000044  79737465
000048  6d204861
00004c  6c742e0d
000050  0a00    
000052  00                DCB      0
000053  00                DCB      0
                  |L3.84|
                          DCD      0x40013804

                          AREA ||i.MemManage_Handler||, CODE, READONLY, ALIGN=1

                  MemManage_Handler PROC
;;;84     */   
;;;85     void MemManage_Handler(void)
000000  bf00              NOP      
                  |L4.2|
;;;86     {
;;;87     
;;;88       /* 当内存管理异常发生时进入死循环 */
;;;89       while (1)
000002  e7fe              B        |L4.2|
;;;90       {
;;;91       }
;;;92     }
;;;93     
                          ENDP


                          AREA ||i.NMI_Handler||, CODE, READONLY, ALIGN=1

                  NMI_Handler PROC
;;;47     */  
;;;48     void NMI_Handler(void)
000000  4770              BX       lr
;;;49     {
;;;50     }
;;;51     
                          ENDP


                          AREA ||i.TIM3_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIM3_IRQHandler PROC
;;;137    
;;;138    void TIM3_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;139    {
;;;140       //检测是否发生溢出更新事件
;;;141       if(TIM_GetITStatus(TIM3, TIM_IT_Update) != RESET)
000002  2101              MOVS     r1,#1
000004  480b              LDR      r0,|L6.52|
000006  f7fffffe          BL       TIM_GetITStatus
00000a  b190              CBZ      r0,|L6.50|
;;;142       {
;;;143    		//清除TIM2的中断待处理位
;;;144    		TIM_ClearITPendingBit(TIM3 , TIM_FLAG_Update);
00000c  2101              MOVS     r1,#1
00000e  4809              LDR      r0,|L6.52|
000010  f7fffffe          BL       TIM_ClearITPendingBit
;;;145    		msTicks++; /* increment counter necessary in Delay()*/
000014  4808              LDR      r0,|L6.56|
000016  6800              LDR      r0,[r0,#0]  ; msTicks
000018  1c40              ADDS     r0,r0,#1
00001a  4907              LDR      r1,|L6.56|
00001c  6008              STR      r0,[r1,#0]  ; msTicks
;;;146    		// SHOULD BE Added DNS Timer Handler your 1s tick timer
;;;147    		if((msTicks % 10) == 0){
00001e  4608              MOV      r0,r1
000020  6800              LDR      r0,[r0,#0]  ; msTicks
000022  210a              MOVS     r1,#0xa
000024  fbb0f2f1          UDIV     r2,r0,r1
000028  fb010012          MLS      r0,r1,r2,r0
00002c  b908              CBNZ     r0,|L6.50|
;;;148    			DNS_time_handler();
00002e  f7fffffe          BL       DNS_time_handler
                  |L6.50|
;;;149    		}
;;;150    	}
;;;151    }
000032  bd10              POP      {r4,pc}
;;;152    
                          ENDP

                  |L6.52|
                          DCD      0x40000400
                  |L6.56|
                          DCD      msTicks

                          AREA ||i.UsageFault_Handler||, CODE, READONLY, ALIGN=1

                  UsageFault_Handler PROC
;;;117    */   
;;;118    void UsageFault_Handler(void)
000000  bf00              NOP      
                  |L7.2|
;;;119    {
;;;120      /* 当用法异常时进入死循环 */
;;;121      while (1)
000002  e7fe              B        |L7.2|
;;;122      {
;;;123      }
;;;124    }
;;;125    
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  msTicks
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp\\stm32f10x_it.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___14_stm32f10x_it_c_bb8ca80c____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___14_stm32f10x_it_c_bb8ca80c____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___14_stm32f10x_it_c_bb8ca80c____REVSH|
#line 128
|__asm___14_stm32f10x_it_c_bb8ca80c____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
