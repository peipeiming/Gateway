; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_iwdg.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_iwdg.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\MQTT -I..\..\Ethernet -I..\..\Ethernet\W5500 -I..\..\Internet\DHCP -I..\..\Internet\DNS -I..\..\User\app\src -I..\..\User\app\inc -I..\..\Internet\NTP -I..\..\Internet\HTTP -I.\RTE\_Flash -ID:\MDK5\ARM\CMSIS\5.0.1\CMSIS\Include -ID:\MDK5\Keil\STM32F1xx_DFP\2.0.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\bsp_iwdg.crf ..\..\User\bsp\src\bsp_iwdg.c]
                          THUMB

                          AREA ||i.IWDG_Feed||, CODE, READONLY, ALIGN=1

                  IWDG_Feed PROC
;;;65     */
;;;66     void IWDG_Feed(void)
000000  b510              PUSH     {r4,lr}
;;;67     {
;;;68     	IWDG_ReloadCounter();
000002  f7fffffe          BL       IWDG_ReloadCounter
;;;69     }
000006  bd10              POP      {r4,pc}
;;;70     
                          ENDP


                          AREA ||i.bsp_InitIwdg||, CODE, READONLY, ALIGN=1

                  bsp_InitIwdg PROC
;;;26     */
;;;27     void bsp_InitIwdg(uint32_t _ulIWDGTime)
000000  b510              PUSH     {r4,lr}
;;;28     {
000002  4604              MOV      r4,r0
;;;29     		
;;;30     	/* 检测系统是否从独立看门狗复位中恢复 */
;;;31     	if (RCC_GetFlagStatus(RCC_FLAG_IWDGRST) != RESET)
000004  207d              MOVS     r0,#0x7d
000006  f7fffffe          BL       RCC_GetFlagStatus
;;;32     	{		
;;;33     		/* 清除复位标志 */
;;;34     		//RCC_ClearFlag();
;;;35     	}
;;;36     	
;;;37     	/* 使能LSI */
;;;38     	RCC_LSICmd(ENABLE);
00000a  2001              MOVS     r0,#1
00000c  f7fffffe          BL       RCC_LSICmd
;;;39     	
;;;40     	/* 等待直到LSI就绪 */
;;;41     	while (RCC_GetFlagStatus(RCC_FLAG_LSIRDY) == RESET);
000010  bf00              NOP      
                  |L2.18|
000012  2061              MOVS     r0,#0x61
000014  f7fffffe          BL       RCC_GetFlagStatus
000018  2800              CMP      r0,#0
00001a  d0fa              BEQ      |L2.18|
;;;42     
;;;43     	/* 写入0x5555表示允许访问IWDG_PR 和IWDG_RLR寄存器 */
;;;44     	IWDG_WriteAccessCmd(IWDG_WriteAccess_Enable);
00001c  f2455055          MOV      r0,#0x5555
000020  f7fffffe          BL       IWDG_WriteAccessCmd
;;;45     	
;;;46     	/*  LSI/32 分频*/
;;;47     	IWDG_SetPrescaler(IWDG_Prescaler_256);
000024  2006              MOVS     r0,#6
000026  f7fffffe          BL       IWDG_SetPrescaler
;;;48     	
;;;49     	IWDG_SetReload(_ulIWDGTime);
00002a  b2a0              UXTH     r0,r4
00002c  f7fffffe          BL       IWDG_SetReload
;;;50     	
;;;51     	/* 重载IWDG计数 */
;;;52     	IWDG_ReloadCounter();
000030  f7fffffe          BL       IWDG_ReloadCounter
;;;53     	
;;;54     	/* 使能 IWDG (LSI oscillator 由硬件使能) */
;;;55     	IWDG_Enable();		
000034  f7fffffe          BL       IWDG_Enable
;;;56     }
000038  bd10              POP      {r4,pc}
;;;57     
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp\\src\\bsp_iwdg.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_bsp_iwdg_c_28c9ceec____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___10_bsp_iwdg_c_28c9ceec____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_bsp_iwdg_c_28c9ceec____REVSH|
#line 128
|__asm___10_bsp_iwdg_c_28c9ceec____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
