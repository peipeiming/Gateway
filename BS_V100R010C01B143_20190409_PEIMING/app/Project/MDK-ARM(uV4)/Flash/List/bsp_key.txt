; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_key.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_key.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\MQTT -I..\..\Ethernet -I..\..\Ethernet\W5500 -I..\..\Internet\DHCP -I..\..\Internet\DNS -I..\..\User\app\src -I..\..\User\app\inc -I..\..\Internet\NTP -I..\..\Internet\HTTP -I.\RTE\_Flash -ID:\MDK5\ARM\CMSIS\5.0.1\CMSIS\Include -ID:\MDK5\Keil\STM32F1xx_DFP\2.0.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\bsp_key.crf ..\..\User\bsp\src\bsp_key.c]
                          THUMB

                          AREA ||i.bsp_Initkey||, CODE, READONLY, ALIGN=2

                  bsp_Initkey PROC
;;;11      */
;;;12     void bsp_Initkey(void)
000000  b51f              PUSH     {r0-r4,lr}
;;;13     {   
;;;14     	GPIO_InitTypeDef   GPIO_InitStructure;
;;;15     	EXTI_InitTypeDef   EXTI_InitStructure;
;;;16     	NVIC_InitTypeDef   NVIC_InitStructure;			
;;;17     	
;;;18     	/* 使能 GPIO 时钟 */
;;;19     	RCC_APB2PeriphClockCmd(RCC_APB_KEY, ENABLE);
000002  2101              MOVS     r1,#1
000004  2080              MOVS     r0,#0x80
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;20     
;;;21     	/* 配置 输入模式 */
;;;22     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_KEY;
00000a  f44f6080          MOV      r0,#0x400
00000e  f8ad000c          STRH     r0,[sp,#0xc]
;;;23     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;
000012  2048              MOVS     r0,#0x48
000014  f88d000f          STRB     r0,[sp,#0xf]
;;;24     	GPIO_Init(GPIO_PORT_KEY, &GPIO_InitStructure);
000018  a903              ADD      r1,sp,#0xc
00001a  4815              LDR      r0,|L1.112|
00001c  f7fffffe          BL       GPIO_Init
;;;25     
;;;26     	/* 使能 AFIO 时钟 */
;;;27     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO, ENABLE);
000020  2101              MOVS     r1,#1
000022  4608              MOV      r0,r1
000024  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;28     
;;;29     	GPIO_EXTILineConfig(KEY_EXTI_PortSource, KEY_EXTI_PinSource);
000028  210a              MOVS     r1,#0xa
00002a  2005              MOVS     r0,#5
00002c  f7fffffe          BL       GPIO_EXTILineConfig
;;;30     
;;;31     	EXTI_InitStructure.EXTI_Line = KEY_EXTI_LINE;
000030  f44f6080          MOV      r0,#0x400
000034  9001              STR      r0,[sp,#4]
;;;32     	EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
000036  2000              MOVS     r0,#0
000038  f88d0008          STRB     r0,[sp,#8]
;;;33     	EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;  	/* 上升沿触发 */
00003c  200c              MOVS     r0,#0xc
00003e  f88d0009          STRB     r0,[sp,#9]
;;;34     	EXTI_InitStructure.EXTI_LineCmd = ENABLE;
000042  2001              MOVS     r0,#1
000044  f88d000a          STRB     r0,[sp,#0xa]
;;;35     	EXTI_Init(&EXTI_InitStructure);
000048  a801              ADD      r0,sp,#4
00004a  f7fffffe          BL       EXTI_Init
;;;36     
;;;37       #ifndef MCBR03
;;;38     	/* Enable and set EXTI13 Interrupt to the lowest priority */
;;;39     	NVIC_InitStructure.NVIC_IRQChannel = EXTI15_10_IRQn;
00004e  2028              MOVS     r0,#0x28
000050  f88d0000          STRB     r0,[sp,#0]
;;;40     	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0x0F;
000054  200f              MOVS     r0,#0xf
000056  f88d0001          STRB     r0,[sp,#1]
;;;41     	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0x00;
00005a  2000              MOVS     r0,#0
00005c  f88d0002          STRB     r0,[sp,#2]
;;;42     	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
000060  2001              MOVS     r0,#1
000062  f88d0003          STRB     r0,[sp,#3]
;;;43     	NVIC_Init(&NVIC_InitStructure); 	
000066  4668              MOV      r0,sp
000068  f7fffffe          BL       NVIC_Init
;;;44       #endif	
;;;45     }
00006c  bd1f              POP      {r0-r4,pc}
;;;46     
                          ENDP

00006e  0000              DCW      0x0000
                  |L1.112|
                          DCD      0x40011c00

                          AREA ||i.bsp_Initkey_Triggertype||, CODE, READONLY, ALIGN=1

                  bsp_Initkey_Triggertype PROC
;;;46     
;;;47     void bsp_Initkey_Triggertype(EXTITrigger_TypeDef Trigger_TypeDef)
000000  b51c              PUSH     {r2-r4,lr}
;;;48     {
000002  4604              MOV      r4,r0
;;;49     	EXTI_InitTypeDef   EXTI_InitStructure;
;;;50     	
;;;51     	EXTI_InitStructure.EXTI_Line = KEY_EXTI_LINE;
000004  f44f6080          MOV      r0,#0x400
000008  9000              STR      r0,[sp,#0]
;;;52     	EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
00000a  2000              MOVS     r0,#0
00000c  f88d0004          STRB     r0,[sp,#4]
;;;53     	EXTI_InitStructure.EXTI_Trigger = Trigger_TypeDef;  	/* 上升沿触发 */
000010  f88d4005          STRB     r4,[sp,#5]
;;;54     	EXTI_InitStructure.EXTI_LineCmd = ENABLE;
000014  2001              MOVS     r0,#1
000016  f88d0006          STRB     r0,[sp,#6]
;;;55     	EXTI_Init(&EXTI_InitStructure);	
00001a  4668              MOV      r0,sp
00001c  f7fffffe          BL       EXTI_Init
;;;56     }
000020  bd1c              POP      {r2-r4,pc}
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp\\src\\bsp_key.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_bsp_key_c_e4278cfd____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_bsp_key_c_e4278cfd____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_bsp_key_c_e4278cfd____REVSH|
#line 128
|__asm___9_bsp_key_c_e4278cfd____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
