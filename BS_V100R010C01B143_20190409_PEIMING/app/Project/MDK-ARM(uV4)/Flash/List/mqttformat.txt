; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\mqttformat.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\mqttformat.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\MQTT -I..\..\Ethernet -I..\..\Ethernet\W5500 -I..\..\Internet\DHCP -I..\..\Internet\DNS -I..\..\User\app\src -I..\..\User\app\inc -I..\..\Internet\NTP -I..\..\Internet\HTTP -I.\RTE\_Flash -ID:\MDK5\ARM\CMSIS\5.0.1\CMSIS\Include -ID:\MDK5\Keil\STM32F1xx_DFP\2.0.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\mqttformat.crf ..\..\MQTT\MQTTFormat.c]
                          THUMB

                          AREA ||i.MQTTPacket_getName||, CODE, READONLY, ALIGN=2

                  MQTTPacket_getName PROC
;;;30     
;;;31     const char* MQTTPacket_getName(unsigned short packetid)
000000  4601              MOV      r1,r0
;;;32     {
;;;33     	return MQTTPacket_names[packetid];
000002  4802              LDR      r0,|L1.12|
000004  f8500021          LDR      r0,[r0,r1,LSL #2]
;;;34     }
000008  4770              BX       lr
;;;35     
                          ENDP

00000a  0000              DCW      0x0000
                  |L1.12|
                          DCD      MQTTPacket_names

                          AREA ||i.MQTTStringFormat_ack||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_return_value
                          REQUIRE _printf_d
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  MQTTStringFormat_ack PROC
;;;79     
;;;80     int MQTTStringFormat_ack(char* strbuf, int strbuflen, unsigned char packettype, unsigned char dup, unsigned short packetid)
000000  e92d43f8          PUSH     {r3-r9,lr}
;;;81     {
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
000008  4617              MOV      r7,r2
00000a  4698              MOV      r8,r3
00000c  f8dd9020          LDR      r9,[sp,#0x20]
;;;82     	int strindex = snprintf(strbuf, strbuflen, "%s, packet id %d", MQTTPacket_names[packettype], packetid);
000010  480b              LDR      r0,|L2.64|
000012  f8cd9000          STR      r9,[sp,#0]
000016  f8503027          LDR      r3,[r0,r7,LSL #2]
00001a  a20a              ADR      r2,|L2.68|
00001c  4631              MOV      r1,r6
00001e  4628              MOV      r0,r5
000020  f7fffffe          BL       __2snprintf
000024  4604              MOV      r4,r0
;;;83     	if (dup)
000026  f1b80f00          CMP      r8,#0
00002a  d006              BEQ      |L2.58|
;;;84     		strindex += snprintf(strbuf + strindex, strbuflen - strindex, ", dup %d", dup);
00002c  1b31              SUBS     r1,r6,r4
00002e  1928              ADDS     r0,r5,r4
000030  4643              MOV      r3,r8
000032  a209              ADR      r2,|L2.88|
000034  f7fffffe          BL       __2snprintf
000038  4404              ADD      r4,r4,r0
                  |L2.58|
;;;85     	return strindex;
00003a  4620              MOV      r0,r4
;;;86     }
00003c  e8bd83f8          POP      {r3-r9,pc}
;;;87     
                          ENDP

                  |L2.64|
                          DCD      MQTTPacket_names
                  |L2.68|
000044  25732c20          DCB      "%s, packet id %d",0
000048  7061636b
00004c  65742069
000050  64202564
000054  00      
000055  00                DCB      0
000056  00                DCB      0
000057  00                DCB      0
                  |L2.88|
000058  2c206475          DCB      ", dup %d",0
00005c  70202564
000060  00      
000061  00                DCB      0
000062  00                DCB      0
000063  00                DCB      0

                          AREA ||i.MQTTStringFormat_connack||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_return_value
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  MQTTStringFormat_connack PROC
;;;60     
;;;61     int MQTTStringFormat_connack(char* strbuf, int strbuflen, unsigned char connack_rc, unsigned char sessionPresent)
000000  e92d43f8          PUSH     {r3-r9,lr}
;;;62     {
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
000008  4614              MOV      r4,r2
00000a  461f              MOV      r7,r3
;;;63     	int strindex = snprintf(strbuf, strbuflen, "CONNACK session present %d, rc %d", sessionPresent, connack_rc);
00000c  463b              MOV      r3,r7
00000e  a205              ADR      r2,|L3.36|
000010  4631              MOV      r1,r6
000012  4628              MOV      r0,r5
000014  9400              STR      r4,[sp,#0]
000016  f7fffffe          BL       __2snprintf
00001a  4680              MOV      r8,r0
;;;64     	return strindex;
00001c  4640              MOV      r0,r8
;;;65     }
00001e  e8bd83f8          POP      {r3-r9,pc}
;;;66     
                          ENDP

000022  0000              DCW      0x0000
                  |L3.36|
000024  434f4e4e          DCB      "CONNACK session present %d, rc %d",0
000028  41434b20
00002c  73657373
000030  696f6e20
000034  70726573
000038  656e7420
00003c  25642c20
000040  72632025
000044  6400    
000046  00                DCB      0
000047  00                DCB      0

                          AREA ||i.MQTTStringFormat_connect||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_return_value
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                  MQTTStringFormat_connect PROC
;;;36     
;;;37     int MQTTStringFormat_connect(char* strbuf, int strbuflen, MQTTPacket_connectData* data)
000000  b5f0              PUSH     {r4-r7,lr}
;;;38     {
000002  b085              SUB      sp,sp,#0x14
000004  4606              MOV      r6,r0
000006  460f              MOV      r7,r1
000008  4614              MOV      r4,r2
;;;39     	int strindex = 0;
00000a  2500              MOVS     r5,#0
;;;40     
;;;41     	strindex = snprintf(strbuf, strbuflen,
00000c  8b21              LDRH     r1,[r4,#0x18]
00000e  7ea2              LDRB     r2,[r4,#0x1a]
000010  e9d40304          LDRD     r0,r3,[r4,#0x10]
000014  e9cd3201          STRD     r3,r2,[sp,#4]
000018  9103              STR      r1,[sp,#0xc]
00001a  9000              STR      r0,[sp,#0]
00001c  7a23              LDRB     r3,[r4,#8]
00001e  4a1d              LDR      r2,|L4.148|
000020  4639              MOV      r1,r7
000022  4630              MOV      r0,r6
000024  f7fffffe          BL       __2snprintf
000028  4605              MOV      r5,r0
;;;42     			"CONNECT MQTT version %d, client id %.*s, clean session %d, keep alive %d",
;;;43     			(int)data->MQTTVersion, data->clientID.lenstring.len, data->clientID.lenstring.data,
;;;44     			(int)data->cleansession, data->keepAliveInterval);
;;;45     	if (data->willFlag)
00002a  7ee0              LDRB     r0,[r4,#0x1b]
00002c  b190              CBZ      r0,|L4.84|
;;;46     		strindex += snprintf(&strbuf[strindex], strbuflen - strindex,
00002e  e9d4030a          LDRD     r0,r3,[r4,#0x28]
000032  e9d4210d          LDRD     r2,r1,[r4,#0x34]
000036  e9cd3202          STRD     r3,r2,[sp,#8]
00003a  9104              STR      r1,[sp,#0x10]
00003c  9001              STR      r0,[sp,#4]
00003e  f894003c          LDRB     r0,[r4,#0x3c]
000042  9000              STR      r0,[sp,#0]
000044  f894303d          LDRB     r3,[r4,#0x3d]
000048  1b79              SUBS     r1,r7,r5
00004a  1970              ADDS     r0,r6,r5
00004c  4a12              LDR      r2,|L4.152|
00004e  f7fffffe          BL       __2snprintf
000052  4405              ADD      r5,r5,r0
                  |L4.84|
;;;47     				", will QoS %d, will retain %d, will topic %.*s, will message %.*s",
;;;48     				data->will.qos, data->will.retained,
;;;49     				data->will.topicName.lenstring.len, data->will.topicName.lenstring.data,
;;;50     				data->will.message.lenstring.len, data->will.message.lenstring.data);
;;;51     	if (data->username.lenstring.data && data->username.lenstring.len > 0)
000054  6ca0              LDR      r0,[r4,#0x48]
000056  b158              CBZ      r0,|L4.112|
000058  6c60              LDR      r0,[r4,#0x44]
00005a  2800              CMP      r0,#0
00005c  dd08              BLE      |L4.112|
;;;52     		strindex += snprintf(&strbuf[strindex], strbuflen - strindex,
00005e  6ca0              LDR      r0,[r4,#0x48]
000060  9000              STR      r0,[sp,#0]
000062  1b79              SUBS     r1,r7,r5
000064  1970              ADDS     r0,r6,r5
000066  a20d              ADR      r2,|L4.156|
000068  6c63              LDR      r3,[r4,#0x44]
00006a  f7fffffe          BL       __2snprintf
00006e  4405              ADD      r5,r5,r0
                  |L4.112|
;;;53     				", user name %.*s", data->username.lenstring.len, data->username.lenstring.data);
;;;54     	if (data->password.lenstring.data && data->password.lenstring.len > 0)
000070  6d60              LDR      r0,[r4,#0x54]
000072  b158              CBZ      r0,|L4.140|
000074  6d20              LDR      r0,[r4,#0x50]
000076  2800              CMP      r0,#0
000078  dd08              BLE      |L4.140|
;;;55     		strindex += snprintf(&strbuf[strindex], strbuflen - strindex,
00007a  6d60              LDR      r0,[r4,#0x54]
00007c  9000              STR      r0,[sp,#0]
00007e  1b79              SUBS     r1,r7,r5
000080  1970              ADDS     r0,r6,r5
000082  a20b              ADR      r2,|L4.176|
000084  6d23              LDR      r3,[r4,#0x50]
000086  f7fffffe          BL       __2snprintf
00008a  4405              ADD      r5,r5,r0
                  |L4.140|
;;;56     				", password %.*s", data->password.lenstring.len, data->password.lenstring.data);
;;;57     	return strindex;
00008c  4628              MOV      r0,r5
;;;58     }
00008e  b005              ADD      sp,sp,#0x14
000090  bdf0              POP      {r4-r7,pc}
;;;59     
                          ENDP

000092  0000              DCW      0x0000
                  |L4.148|
                          DCD      ||.conststring||+0x90
                  |L4.152|
                          DCD      ||.conststring||+0xdc
                  |L4.156|
00009c  2c207573          DCB      ", user name %.*s",0
0000a0  6572206e
0000a4  616d6520
0000a8  252e2a73
0000ac  00      
0000ad  00                DCB      0
0000ae  00                DCB      0
0000af  00                DCB      0
                  |L4.176|
0000b0  2c207061          DCB      ", password %.*s",0
0000b4  7373776f
0000b8  72642025
0000bc  2e2a7300

                          AREA ||i.MQTTStringFormat_publish||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_return_value
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  MQTTStringFormat_publish PROC
;;;67     
;;;68     int MQTTStringFormat_publish(char* strbuf, int strbuflen, unsigned char dup, int qos, unsigned char retained,
000000  e92d4fff          PUSH     {r0-r11,lr}
;;;69     		unsigned short packetid, MQTTString topicName, unsigned char* payload, int payloadlen)
;;;70     {
000004  b089              SUB      sp,sp,#0x24
000006  4680              MOV      r8,r0
000008  4614              MOV      r4,r2
00000a  461d              MOV      r5,r3
00000c  e9ddb61b          LDRD     r11,r6,[sp,#0x6c]
000010  e9dd9a16          LDRD     r9,r10,[sp,#0x58]
;;;71     	int strindex = snprintf(strbuf, strbuflen,
000014  2e14              CMP      r6,#0x14
000016  da01              BGE      |L5.28|
;;;72     				"PUBLISH dup %d, QoS %d, retained %d, packet id %d, topic %.*s, payload length %d, payload %.*s",
;;;73     				dup, qos, retained, packetid,
;;;74     				(topicName.lenstring.len < 20) ? topicName.lenstring.len : 20, topicName.lenstring.data,
;;;75     				payloadlen, (payloadlen < 20) ? payloadlen : 20, payload);
000018  4631              MOV      r1,r6
00001a  e000              B        |L5.30|
                  |L5.28|
00001c  2114              MOVS     r1,#0x14
                  |L5.30|
00001e  981a              LDR      r0,[sp,#0x68]
000020  e9cd1b06          STRD     r1,r11,[sp,#0x18]
000024  e9cd0604          STRD     r0,r6,[sp,#0x10]
000028  9819              LDR      r0,[sp,#0x64]
00002a  2814              CMP      r0,#0x14
00002c  da01              BGE      |L5.50|
00002e  9819              LDR      r0,[sp,#0x64]         ;74
000030  e000              B        |L5.52|
                  |L5.50|
000032  2014              MOVS     r0,#0x14              ;74
                  |L5.52|
000034  4623              MOV      r3,r4                 ;74
000036  4a06              LDR      r2,|L5.80|
000038  e88d0620          STM      sp,{r5,r9,r10}        ;74
00003c  9003              STR      r0,[sp,#0xc]          ;74
00003e  4640              MOV      r0,r8                 ;74
000040  990a              LDR      r1,[sp,#0x28]         ;74
000042  f7fffffe          BL       __2snprintf
000046  4607              MOV      r7,r0                 ;74
;;;76     	return strindex;
000048  4638              MOV      r0,r7
;;;77     }
00004a  b00d              ADD      sp,sp,#0x34
00004c  e8bd8ff0          POP      {r4-r11,pc}
;;;78     
                          ENDP

                  |L5.80|
                          DCD      ||.conststring||+0x120

                          AREA ||i.MQTTStringFormat_suback||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_return_value
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  MQTTStringFormat_suback PROC
;;;99     
;;;100    int MQTTStringFormat_suback(char* strbuf, int strbuflen, unsigned short packetid, int count, int* grantedQoSs)
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;101    {
000004  4606              MOV      r6,r0
000006  460f              MOV      r7,r1
000008  4614              MOV      r4,r2
00000a  461d              MOV      r5,r3
00000c  f8dd8020          LDR      r8,[sp,#0x20]
;;;102    	return snprintf(strbuf, strbuflen,
000010  f8d80000          LDR      r0,[r8,#0]
000014  4623              MOV      r3,r4
000016  a204              ADR      r2,|L6.40|
000018  4639              MOV      r1,r7
00001a  e9cd5000          STRD     r5,r0,[sp,#0]
00001e  4630              MOV      r0,r6
000020  f7fffffe          BL       __2snprintf
;;;103    		"SUBACK packet id %d count %d granted qos %d", packetid, count, grantedQoSs[0]);
;;;104    }
000024  e8bd81fc          POP      {r2-r8,pc}
;;;105    
                          ENDP

                  |L6.40|
000028  53554241          DCB      "SUBACK packet id %d count %d granted qos %d",0
00002c  434b2070
000030  61636b65
000034  74206964
000038  20256420
00003c  636f756e
000040  74202564
000044  20677261
000048  6e746564
00004c  20716f73
000050  20256400

                          AREA ||i.MQTTStringFormat_subscribe||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_return_value
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  MQTTStringFormat_subscribe PROC
;;;88     
;;;89     int MQTTStringFormat_subscribe(char* strbuf, int strbuflen, unsigned char dup, unsigned short packetid, int count,
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;90     		MQTTString topicFilters[], int requestedQoSs[])
;;;91     {
000004  b086              SUB      sp,sp,#0x18
000006  4607              MOV      r7,r0
000008  4688              MOV      r8,r1
00000a  4614              MOV      r4,r2
00000c  461d              MOV      r5,r3
00000e  e9dd6a0f          LDRD     r6,r10,[sp,#0x3c]
000012  f8dd9038          LDR      r9,[sp,#0x38]
;;;92     	return snprintf(strbuf, strbuflen,
000016  f8da0000          LDR      r0,[r10,#0]
00001a  e9d62101          LDRD     r2,r1,[r6,#4]
00001e  4623              MOV      r3,r4
000020  e9cd5900          STRD     r5,r9,[sp,#0]
000024  e9cd2102          STRD     r2,r1,[sp,#8]
000028  9004              STR      r0,[sp,#0x10]
00002a  a204              ADR      r2,|L7.60|
00002c  4641              MOV      r1,r8
00002e  4638              MOV      r0,r7
000030  f7fffffe          BL       __2snprintf
;;;93     		"SUBSCRIBE dup %d, packet id %d count %d topic %.*s qos %d",
;;;94     		dup, packetid, count,
;;;95     		topicFilters[0].lenstring.len, topicFilters[0].lenstring.data,
;;;96     		requestedQoSs[0]);
;;;97     }
000034  b006              ADD      sp,sp,#0x18
000036  e8bd87f0          POP      {r4-r10,pc}
;;;98     
                          ENDP

00003a  0000              DCW      0x0000
                  |L7.60|
00003c  53554253          DCB      "SUBSCRIBE dup %d, packet id %d count %d topic %.*s qos "
000040  43524942
000044  45206475
000048  70202564
00004c  2c207061
000050  636b6574
000054  20696420
000058  25642063
00005c  6f756e74
000060  20256420
000064  746f7069
000068  6320252e
00006c  2a732071
000070  6f7320  
000073  256400            DCB      "%d",0
000076  00                DCB      0
000077  00                DCB      0

                          AREA ||i.MQTTStringFormat_unsubscribe||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_return_value
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  MQTTStringFormat_unsubscribe PROC
;;;106    
;;;107    int MQTTStringFormat_unsubscribe(char* strbuf, int strbuflen, unsigned char dup, unsigned short packetid,
000000  e92d47ff          PUSH     {r0-r10,lr}
;;;108    		int count, MQTTString topicFilters[])
;;;109    {
000004  4607              MOV      r7,r0
000006  4688              MOV      r8,r1
000008  4614              MOV      r4,r2
00000a  461d              MOV      r5,r3
00000c  e9dd960c          LDRD     r9,r6,[sp,#0x30]
;;;110    	return snprintf(strbuf, strbuflen,
000010  e9d61001          LDRD     r1,r0,[r6,#4]
000014  4623              MOV      r3,r4
000016  a206              ADR      r2,|L8.48|
000018  e9cd5900          STRD     r5,r9,[sp,#0]
00001c  e9cd1002          STRD     r1,r0,[sp,#8]
000020  4641              MOV      r1,r8
000022  4638              MOV      r0,r7
000024  f7fffffe          BL       __2snprintf
;;;111    					"UNSUBSCRIBE dup %d, packet id %d count %d topic %.*s",
;;;112    					dup, packetid, count,
;;;113    					topicFilters[0].lenstring.len, topicFilters[0].lenstring.data);
;;;114    }
000028  b004              ADD      sp,sp,#0x10
00002a  e8bd87f0          POP      {r4-r10,pc}
;;;115    
                          ENDP

00002e  0000              DCW      0x0000
                  |L8.48|
000030  554e5355          DCB      "UNSUBSCRIBE dup %d, packet id %d count %d topic %.*s",0
000034  42534352
000038  49424520
00003c  64757020
000040  25642c20
000044  7061636b
000048  65742069
00004c  64202564
000050  20636f75
000054  6e742025
000058  6420746f
00005c  70696320
000060  252e2a73
000064  00      
000065  00                DCB      0
000066  00                DCB      0
000067  00                DCB      0

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  52455345          DCB      "RESERVED",0
000004  52564544
000008  00      
000009  00                DCB      0
00000a  00                DCB      0
00000b  00                DCB      0
00000c  434f4e4e          DCB      "CONNECT",0
000010  45435400
000014  434f4e4e          DCB      "CONNACK",0
000018  41434b00
00001c  5055424c          DCB      "PUBLISH",0
000020  49534800
000024  50554241          DCB      "PUBACK",0
000028  434b00  
00002b  00                DCB      0
00002c  50554252          DCB      "PUBREC",0
000030  454300  
000033  00                DCB      0
000034  50554252          DCB      "PUBREL",0
000038  454c00  
00003b  00                DCB      0
00003c  50554243          DCB      "PUBCOMP",0
000040  4f4d5000
000044  53554253          DCB      "SUBSCRIBE",0
000048  43524942
00004c  4500    
00004e  00                DCB      0
00004f  00                DCB      0
000050  53554241          DCB      "SUBACK",0
000054  434b00  
000057  00                DCB      0
000058  554e5355          DCB      "UNSUBSCRIBE",0
00005c  42534352
000060  49424500
000064  554e5355          DCB      "UNSUBACK",0
000068  4241434b
00006c  00      
00006d  00                DCB      0
00006e  00                DCB      0
00006f  00                DCB      0
000070  50494e47          DCB      "PINGREQ",0
000074  52455100
000078  50494e47          DCB      "PINGRESP",0
00007c  52455350
000080  00      
000081  00                DCB      0
000082  00                DCB      0
000083  00                DCB      0
000084  44495343          DCB      "DISCONNECT",0
000088  4f4e4e45
00008c  435400  
00008f  00                DCB      0
000090  434f4e4e          DCB      "CONNECT MQTT version %d, client id %.*s, clean session "
000094  45435420
000098  4d515454
00009c  20766572
0000a0  73696f6e
0000a4  2025642c
0000a8  20636c69
0000ac  656e7420
0000b0  69642025
0000b4  2e2a732c
0000b8  20636c65
0000bc  616e2073
0000c0  65737369
0000c4  6f6e20  
0000c7  25642c20          DCB      "%d, keep alive %d",0
0000cb  6b656570
0000cf  20616c69
0000d3  76652025
0000d7  6400    
0000d9  00                DCB      0
0000da  00                DCB      0
0000db  00                DCB      0
0000dc  2c207769          DCB      ", will QoS %d, will retain %d, will topic %.*s, will me"
0000e0  6c6c2051
0000e4  6f532025
0000e8  642c2077
0000ec  696c6c20
0000f0  72657461
0000f4  696e2025
0000f8  642c2077
0000fc  696c6c20
000100  746f7069
000104  6320252e
000108  2a732c20
00010c  77696c6c
000110  206d65  
000113  73736167          DCB      "ssage %.*s",0
000117  6520252e
00011b  2a7300  
00011e  00                DCB      0
00011f  00                DCB      0
000120  5055424c          DCB      "PUBLISH dup %d, QoS %d, retained %d, packet id %d, topi"
000124  49534820
000128  64757020
00012c  25642c20
000130  516f5320
000134  25642c20
000138  72657461
00013c  696e6564
000140  2025642c
000144  20706163
000148  6b657420
00014c  69642025
000150  642c2074
000154  6f7069  
000157  6320252e          DCB      "c %.*s, payload length %d, payload %.*s",0
00015b  2a732c20
00015f  7061796c
000163  6f616420
000167  6c656e67
00016b  74682025
00016f  642c2070
000173  61796c6f
000177  61642025
00017b  2e2a7300

                          AREA ||.data||, DATA, ALIGN=2

                  MQTTPacket_names
                          DCD      ||.conststring||
                          DCD      ||.conststring||+0xc
                          DCD      ||.conststring||+0x14
                          DCD      ||.conststring||+0x1c
                          DCD      ||.conststring||+0x24
                          DCD      ||.conststring||+0x2c
                          DCD      ||.conststring||+0x34
                          DCD      ||.conststring||+0x3c
                          DCD      ||.conststring||+0x44
                          DCD      ||.conststring||+0x50
                          DCD      ||.conststring||+0x58
                          DCD      ||.conststring||+0x64
                          DCD      ||.conststring||+0x70
                          DCD      ||.conststring||+0x78
                          DCD      ||.conststring||+0x84
