; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\mqttserializepublish.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\mqttserializepublish.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\MQTT -I..\..\Ethernet -I..\..\Ethernet\W5500 -I..\..\Internet\DHCP -I..\..\Internet\DNS -I..\..\User\app\src -I..\..\User\app\inc -I..\..\Internet\NTP -I..\..\Internet\HTTP -I.\RTE\_Flash -ID:\MDK5\ARM\CMSIS\5.0.1\CMSIS\Include -ID:\MDK5\Keil\STM32F1xx_DFP\2.0.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\mqttserializepublish.crf ..\..\MQTT\MQTTSerializePublish.c]
                          THUMB

                          AREA ||i.MQTTSerialize_ack||, CODE, READONLY, ALIGN=1

                  MQTTSerialize_ack PROC
;;;103      */
;;;104    int MQTTSerialize_ack(unsigned char* buf, int buflen, unsigned char packettype, unsigned char dup, unsigned short packetid)
000000  e92d47fc          PUSH     {r2-r10,lr}
;;;105    {
000004  4604              MOV      r4,r0
000006  460e              MOV      r6,r1
000008  4615              MOV      r5,r2
00000a  461f              MOV      r7,r3
00000c  f8dd8028          LDR      r8,[sp,#0x28]
;;;106    	MQTTHeader header = {0};
000010  2000              MOVS     r0,#0
000012  9001              STR      r0,[sp,#4]
;;;107    	int rc = 0;
000014  4681              MOV      r9,r0
;;;108    	unsigned char *ptr = buf;
000016  9400              STR      r4,[sp,#0]
;;;109    
;;;110    	FUNC_ENTRY;
;;;111    	if (buflen < 4)
000018  2e04              CMP      r6,#4
00001a  da02              BGE      |L1.34|
;;;112    	{
;;;113    		rc = MQTTPACKET_BUFFER_TOO_SHORT;
00001c  f06f0901          MVN      r9,#1
;;;114    		goto exit;
000020  e024              B        |L1.108|
                  |L1.34|
;;;115    	}
;;;116    	header.bits.type = packettype;
000022  9801              LDR      r0,[sp,#4]
000024  f3651007          BFI      r0,r5,#4,#4
000028  9001              STR      r0,[sp,#4]
;;;117    	header.bits.dup = dup;
00002a  9801              LDR      r0,[sp,#4]
00002c  f36700c3          BFI      r0,r7,#3,#1
000030  9001              STR      r0,[sp,#4]
;;;118    	header.bits.qos = (packettype == PUBREL) ? 1 : 0;
000032  2d06              CMP      r5,#6
000034  d101              BNE      |L1.58|
000036  2101              MOVS     r1,#1
000038  e000              B        |L1.60|
                  |L1.58|
00003a  2100              MOVS     r1,#0
                  |L1.60|
00003c  9801              LDR      r0,[sp,#4]
00003e  f3610042          BFI      r0,r1,#1,#2
000042  9001              STR      r0,[sp,#4]
;;;119    	writeChar(&ptr, header.byte); /* write header */
000044  f89d1004          LDRB     r1,[sp,#4]
000048  4668              MOV      r0,sp
00004a  f7fffffe          BL       writeChar
;;;120    
;;;121    	ptr += MQTTPacket_encode(ptr, 2); /* write remaining length */
00004e  2102              MOVS     r1,#2
000050  9800              LDR      r0,[sp,#0]
000052  f7fffffe          BL       MQTTPacket_encode
000056  9900              LDR      r1,[sp,#0]
000058  4408              ADD      r0,r0,r1
00005a  9000              STR      r0,[sp,#0]
;;;122    	writeInt(&ptr, packetid);
00005c  4641              MOV      r1,r8
00005e  4668              MOV      r0,sp
000060  f7fffffe          BL       writeInt
;;;123    	rc = ptr - buf;
000064  9800              LDR      r0,[sp,#0]
000066  eba00904          SUB      r9,r0,r4
;;;124    exit:
00006a  bf00              NOP      
                  |L1.108|
;;;125    	FUNC_EXIT_RC(rc);
;;;126    	return rc;
00006c  4648              MOV      r0,r9
;;;127    }
00006e  e8bd87fc          POP      {r2-r10,pc}
;;;128    
                          ENDP


                          AREA ||i.MQTTSerialize_puback||, CODE, READONLY, ALIGN=1

                  MQTTSerialize_puback PROC
;;;136      */
;;;137    int MQTTSerialize_puback(unsigned char* buf, int buflen, unsigned short packetid)
000000  b5f8              PUSH     {r3-r7,lr}
;;;138    {
000002  4605              MOV      r5,r0
000004  460e              MOV      r6,r1
000006  4614              MOV      r4,r2
;;;139    	return MQTTSerialize_ack(buf, buflen, PUBACK, 0, packetid);
000008  2300              MOVS     r3,#0
00000a  2204              MOVS     r2,#4
00000c  4631              MOV      r1,r6
00000e  4628              MOV      r0,r5
000010  9400              STR      r4,[sp,#0]
000012  f7fffffe          BL       MQTTSerialize_ack
;;;140    }
000016  bdf8              POP      {r3-r7,pc}
;;;141    
                          ENDP


                          AREA ||i.MQTTSerialize_pubcomp||, CODE, READONLY, ALIGN=1

                  MQTTSerialize_pubcomp PROC
;;;163      */
;;;164    int MQTTSerialize_pubcomp(unsigned char* buf, int buflen, unsigned short packetid)
000000  b5f8              PUSH     {r3-r7,lr}
;;;165    {
000002  4605              MOV      r5,r0
000004  460e              MOV      r6,r1
000006  4614              MOV      r4,r2
;;;166    	return MQTTSerialize_ack(buf, buflen, PUBCOMP, 0, packetid);
000008  2300              MOVS     r3,#0
00000a  2207              MOVS     r2,#7
00000c  4631              MOV      r1,r6
00000e  4628              MOV      r0,r5
000010  9400              STR      r4,[sp,#0]
000012  f7fffffe          BL       MQTTSerialize_ack
;;;167    }
000016  bdf8              POP      {r3-r7,pc}
;;;168    
                          ENDP


                          AREA ||i.MQTTSerialize_publish||, CODE, READONLY, ALIGN=1

                  MQTTSerialize_publish PROC
;;;54       */
;;;55     int MQTTSerialize_publish(unsigned char* buf, int buflen, unsigned char dup, int qos, unsigned char retained, unsigned short packetid,
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;56     		MQTTString topicName, unsigned char* payload, int payloadlen)
;;;57     {
000004  b087              SUB      sp,sp,#0x1c
000006  4605              MOV      r5,r0
000008  460f              MOV      r7,r1
00000a  4690              MOV      r8,r2
00000c  461c              MOV      r4,r3
00000e  e9ddb615          LDRD     r11,r6,[sp,#0x54]
000012  e9dd9a10          LDRD     r9,r10,[sp,#0x40]
;;;58     	unsigned char *ptr = buf;
000016  9506              STR      r5,[sp,#0x18]
;;;59     	MQTTHeader header = {0};
000018  2000              MOVS     r0,#0
00001a  9005              STR      r0,[sp,#0x14]
;;;60     	int rem_len = 0;
00001c  9004              STR      r0,[sp,#0x10]
;;;61     	int rc = 0;
00001e  9003              STR      r0,[sp,#0xc]
;;;62     
;;;63     	FUNC_ENTRY;
;;;64     	if (MQTTPacket_len(rem_len = MQTTSerialize_publishLength(qos, topicName, payloadlen)) > buflen)
000020  9600              STR      r6,[sp,#0]
000022  4620              MOV      r0,r4
000024  a912              ADD      r1,sp,#0x48
000026  c90e              LDM      r1,{r1-r3}
000028  f7fffffe          BL       MQTTSerialize_publishLength
00002c  9004              STR      r0,[sp,#0x10]
00002e  9002              STR      r0,[sp,#8]
000030  f7fffffe          BL       MQTTPacket_len
000034  42b8              CMP      r0,r7
000036  dd03              BLE      |L4.64|
;;;65     	{
;;;66     		rc = MQTTPACKET_BUFFER_TOO_SHORT;
000038  f06f0001          MVN      r0,#1
00003c  9003              STR      r0,[sp,#0xc]
;;;67     		goto exit;
00003e  e033              B        |L4.168|
                  |L4.64|
;;;68     	}
;;;69     
;;;70     	header.bits.type = PUBLISH;
000040  9805              LDR      r0,[sp,#0x14]
000042  f02000f0          BIC      r0,r0,#0xf0
000046  3030              ADDS     r0,r0,#0x30
000048  9005              STR      r0,[sp,#0x14]
;;;71     	header.bits.dup = dup;
00004a  9805              LDR      r0,[sp,#0x14]
00004c  f36800c3          BFI      r0,r8,#3,#1
000050  9005              STR      r0,[sp,#0x14]
;;;72     	header.bits.qos = qos;
000052  9805              LDR      r0,[sp,#0x14]
000054  f3640042          BFI      r0,r4,#1,#2
000058  9005              STR      r0,[sp,#0x14]
;;;73     	header.bits.retain = retained;
00005a  9805              LDR      r0,[sp,#0x14]
00005c  f3690000          BFI      r0,r9,#0,#1
000060  9005              STR      r0,[sp,#0x14]
;;;74     	writeChar(&ptr, header.byte); /* write header */
000062  f89d1014          LDRB     r1,[sp,#0x14]
000066  a806              ADD      r0,sp,#0x18
000068  f7fffffe          BL       writeChar
;;;75     
;;;76     	ptr += MQTTPacket_encode(ptr, rem_len); /* write remaining length */;
00006c  9904              LDR      r1,[sp,#0x10]
00006e  9806              LDR      r0,[sp,#0x18]
000070  f7fffffe          BL       MQTTPacket_encode
000074  9906              LDR      r1,[sp,#0x18]
000076  4408              ADD      r0,r0,r1
000078  9006              STR      r0,[sp,#0x18]
;;;77     
;;;78     	writeMQTTString(&ptr, topicName);
00007a  a806              ADD      r0,sp,#0x18
00007c  a912              ADD      r1,sp,#0x48
00007e  c90e              LDM      r1,{r1-r3}
000080  f7fffffe          BL       writeMQTTString
;;;79     
;;;80     	if (qos > 0)
000084  2c00              CMP      r4,#0
000086  dd03              BLE      |L4.144|
;;;81     		writeInt(&ptr, packetid);
000088  4651              MOV      r1,r10
00008a  a806              ADD      r0,sp,#0x18
00008c  f7fffffe          BL       writeInt
                  |L4.144|
;;;82     
;;;83     	memcpy(ptr, payload, payloadlen);
000090  4632              MOV      r2,r6
000092  4659              MOV      r1,r11
000094  9806              LDR      r0,[sp,#0x18]
000096  f7fffffe          BL       __aeabi_memcpy
;;;84     	ptr += payloadlen;
00009a  9806              LDR      r0,[sp,#0x18]
00009c  4430              ADD      r0,r0,r6
00009e  9006              STR      r0,[sp,#0x18]
;;;85     
;;;86     	rc = ptr - buf;
0000a0  9806              LDR      r0,[sp,#0x18]
0000a2  1b40              SUBS     r0,r0,r5
0000a4  9003              STR      r0,[sp,#0xc]
;;;87     
;;;88     exit:
0000a6  bf00              NOP      
                  |L4.168|
;;;89     	FUNC_EXIT_RC(rc);
;;;90     	return rc;
0000a8  9803              LDR      r0,[sp,#0xc]
;;;91     }
0000aa  b007              ADD      sp,sp,#0x1c
0000ac  e8bd8ff0          POP      {r4-r11,pc}
;;;92     
                          ENDP


                          AREA ||i.MQTTSerialize_publishLength||, CODE, READONLY, ALIGN=1

                  MQTTSerialize_publishLength PROC
;;;30       */
;;;31     int MQTTSerialize_publishLength(int qos, MQTTString topicName, int payloadlen)
000000  b57f              PUSH     {r0-r6,lr}
;;;32     {
000002  4605              MOV      r5,r0
000004  9e08              LDR      r6,[sp,#0x20]
;;;33     	int len = 0;
000006  2400              MOVS     r4,#0
;;;34     
;;;35     	len += 2 + MQTTstrlen(topicName) + payloadlen;
000008  a801              ADD      r0,sp,#4
00000a  c807              LDM      r0,{r0-r2}
00000c  f7fffffe          BL       MQTTstrlen
000010  1c80              ADDS     r0,r0,#2
000012  4430              ADD      r0,r0,r6
000014  4404              ADD      r4,r4,r0
;;;36     	if (qos > 0)
000016  2d00              CMP      r5,#0
000018  dd00              BLE      |L5.28|
;;;37     		len += 2; /* packetid */
00001a  1ca4              ADDS     r4,r4,#2
                  |L5.28|
;;;38     	return len;
00001c  4620              MOV      r0,r4
;;;39     }
00001e  b004              ADD      sp,sp,#0x10
000020  bd70              POP      {r4-r6,pc}
;;;40     
                          ENDP


                          AREA ||i.MQTTSerialize_pubrel||, CODE, READONLY, ALIGN=1

                  MQTTSerialize_pubrel PROC
;;;150      */
;;;151    int MQTTSerialize_pubrel(unsigned char* buf, int buflen, unsigned char dup, unsigned short packetid)
000000  b5f8              PUSH     {r3-r7,lr}
;;;152    {
000002  4606              MOV      r6,r0
000004  460f              MOV      r7,r1
000006  4614              MOV      r4,r2
000008  461d              MOV      r5,r3
;;;153    	return MQTTSerialize_ack(buf, buflen, PUBREL, dup, packetid);
00000a  4623              MOV      r3,r4
00000c  2206              MOVS     r2,#6
00000e  4639              MOV      r1,r7
000010  4630              MOV      r0,r6
000012  9500              STR      r5,[sp,#0]
000014  f7fffffe          BL       MQTTSerialize_ack
;;;154    }
000018  bdf8              POP      {r3-r7,pc}
;;;155    
                          ENDP

