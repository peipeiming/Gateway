; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\app_flash.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\app_flash.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\MQTT -I..\..\Ethernet -I..\..\Ethernet\W5500 -I..\..\Internet\DHCP -I..\..\Internet\DNS -I..\..\User\app\src -I..\..\User\app\inc -I..\..\Internet\NTP -I..\..\Internet\HTTP -I.\RTE\_Flash -ID:\MDK5\ARM\CMSIS\5.0.1\CMSIS\Include -ID:\MDK5\Keil\STM32F1xx_DFP\2.0.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\app_flash.crf ..\..\User\app\src\app_flash.c]
                          THUMB

                          AREA ||i.app_flash_AddBeacon||, CODE, READONLY, ALIGN=2

                  app_flash_AddBeacon PROC
;;;275     */
;;;276    ErrorStatus app_flash_AddBeacon(uint8_t *beacon,uint8_t *Serialnumber)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;277    {
000004  b09e              SUB      sp,sp,#0x78
000006  4605              MOV      r5,r0
000008  460f              MOV      r7,r1
;;;278    	uint16_t crcdata;
;;;279    	uint8_t i,j,err,failfalg=0;
00000a  f04f0800          MOV      r8,#0
;;;280    	
;;;281    	uint8_t checkdata[SYSCFG_DATA_LEN];
;;;282    	
;;;283    	uint8_t backinfo[23]={0x13,0x00,0x2a};
00000e  2113              MOVS     r1,#0x13
000010  a801              ADD      r0,sp,#4
000012  f7fffffe          BL       __aeabi_memclr4
000016  4867              LDR      r0,|L1.436|
000018  6800              LDR      r0,[r0,#0]  ; <Data1>
00001a  9000              STR      r0,[sp,#0]
;;;284    	
;;;285    	backinfo[2]=BEACONBACK;
00001c  204a              MOVS     r0,#0x4a
00001e  f88d0002          STRB     r0,[sp,#2]
;;;286    	backinfo[3]=0x01;                                    /*插入蓝牙信标*/
000022  2001              MOVS     r0,#1
000024  f88d0003          STRB     r0,[sp,#3]
;;;287    	
;;;288      memset(&backinfo[4],0,2);                            /*网关设备ID低字节补齐*/
000028  2000              MOVS     r0,#0
00002a  f8ad0004          STRH     r0,[sp,#4]
;;;289    	memcpy(&backinfo[6],sysCfg.parameter.client_mac,6);  /*网关ID*/
00002e  4862              LDR      r0,|L1.440|
000030  6801              LDR      r1,[r0,#0]  ; sysCfg
000032  f8cd1006          STR      r1,[sp,#6]
000036  8880              LDRH     r0,[r0,#4]  ; sysCfg
000038  f8ad000a          STRH     r0,[sp,#0xa]
;;;290    	memcpy(&backinfo[13],beacon,4);                      /*要插入的地址*/
00003c  6828              LDR      r0,[r5,#0]
00003e  f8cd000d          STR      r0,[sp,#0xd]
;;;291      memcpy(&backinfo[17],Serialnumber,4);                /*流水号*/
000042  6838              LDR      r0,[r7,#0]
000044  f8cd0011          STR      r0,[sp,#0x11]
;;;292    	
;;;293    	#if APP_DEBUG  /*插入之前的MAC地址列表*/
;;;294    	printf("Add beacon:");
;;;295    	for(i=0;i<4;i++)
;;;296    	{
;;;297    		printf("%02x ",beacon[i]);
;;;298    	}
;;;299    	printf("\r\n");
;;;300    	printf("before add beacon count:%d list:\r\n",sysCfg.parameter.beacount);
;;;301    	for(i=0;i<sysCfg.parameter.beacount;i++)
;;;302    	{
;;;303    		for(j=0;j<4;j++)
;;;304    		{
;;;305    			printf("%02x ",sysCfg.parameter.bealist[i][j]);
;;;306    		}
;;;307    		printf("\r\n");
;;;308    	}
;;;309    	#endif
;;;310    	
;;;311    	/*检查是否含有考勤信标*/
;;;312    	for(i=0;i<sysCfg.parameter.beacount;i++)
000048  2600              MOVS     r6,#0
00004a  e030              B        |L1.174|
                  |L1.76|
;;;313    	{
;;;314    		/*蓝牙网关下有该考勤信标*/
;;;315    		if(0 == memcmp(beacon,sysCfg.parameter.bealist[i],4))
00004c  485a              LDR      r0,|L1.440|
00004e  387f              SUBS     r0,r0,#0x7f
000050  eb000186          ADD      r1,r0,r6,LSL #2
000054  2204              MOVS     r2,#4
000056  4628              MOV      r0,r5
000058  f7fffffe          BL       memcmp
00005c  bb28              CBNZ     r0,|L1.170|
;;;316    		{
;;;317    			backinfo[12]=0x00;
00005e  2000              MOVS     r0,#0
000060  f88d000c          STRB     r0,[sp,#0xc]
;;;318    			crcdata=app_plat_usMBCRC16(backinfo,backinfo[0]+backinfo[1]*256+2);
000064  f89d2000          LDRB     r2,[sp,#0]
000068  f89d0001          LDRB     r0,[sp,#1]
00006c  eb022000          ADD      r0,r2,r0,LSL #8
000070  1c80              ADDS     r0,r0,#2
000072  b281              UXTH     r1,r0
000074  4668              MOV      r0,sp
000076  f7fffffe          BL       app_plat_usMBCRC16
00007a  901d              STR      r0,[sp,#0x74]
;;;319    			memcpy(&backinfo[21],(uint8_t *)&crcdata,2);
00007c  f8bd0074          LDRH     r0,[sp,#0x74]
000080  f8ad0015          STRH     r0,[sp,#0x15]
;;;320    			
;;;321    			if(mqtt_publish( SOCK_TCPS , BAECON_TOPIC , (char *)backinfo , backinfo[0]+backinfo[1]*256+4))
000084  f89d1000          LDRB     r1,[sp,#0]
000088  f89d0001          LDRB     r0,[sp,#1]
00008c  eb012000          ADD      r0,r1,r0,LSL #8
000090  1d03              ADDS     r3,r0,#4
000092  466a              MOV      r2,sp
000094  a149              ADR      r1,|L1.444|
000096  2000              MOVS     r0,#0
000098  f7fffffe          BL       mqtt_publish
00009c  b118              CBZ      r0,|L1.166|
;;;322    			{
;;;323    				return SUCCESS;
00009e  2001              MOVS     r0,#1
                  |L1.160|
;;;324    			}
;;;325    			else
;;;326    			{
;;;327    		  	#if APP_DEBUG
;;;328    				printf("beacon already existing add beacon back data Send fail!\r\n");  
;;;329    			  #endif
;;;330    				return SUCCESS;
;;;331    			}
;;;332    		}
;;;333    	}
;;;334    	
;;;335    	memcpy(&sysCfg.parameter.bealist[sysCfg.parameter.beacount],beacon,4);  
;;;336      sysCfg.parameter.beacount++;  
;;;337    	sysCfg.parameter.config_hold_flag=CFG_HOLDER;
;;;338    	
;;;339    	#if APP_DEBUG  
;;;340    	printf("after add beacon count:%d list:\r\n",sysCfg.parameter.beacount);
;;;341    	for(i=0;i<sysCfg.parameter.beacount;i++)
;;;342    	{
;;;343    		for(j=0;j<4;j++)
;;;344    		{
;;;345    			printf("%02x ",sysCfg.parameter.bealist[i][j]);
;;;346    		}
;;;347    		printf("\r\n");
;;;348    	}
;;;349    	#endif
;;;350    
;;;351    	err=bsp_WriteCpuFlash(SYSCFG_ADDR,sysCfg.data,SYSCFG_DATA_LEN);
;;;352    	if(0!=err)      /*flash写入错误*/
;;;353    	{ 
;;;354    		failfalg=1;
;;;355    	}
;;;356    
;;;357    	/*检查写入数据*/
;;;358    	err=bsp_ReadCpuFlash(SYSCFG_ADDR,checkdata,SYSCFG_DATA_LEN);
;;;359    	if(1==err)
;;;360    	{
;;;361    		failfalg=1;
;;;362    		return ERROR;   /*读取失败*/
;;;363    	}
;;;364    	
;;;365    	/*比较写入数据与读出数据是否一致*/
;;;366    	if(0 != memcmp(checkdata,sysCfg.data,SYSCFG_DATA_LEN))
;;;367    	{
;;;368    		failfalg=1;
;;;369    	}
;;;370    
;;;371    	if(1==failfalg)
;;;372    	{
;;;373    		/*写入数据错误*/
;;;374    		backinfo[12]=0x01;           
;;;375    		crcdata=app_plat_usMBCRC16(backinfo,backinfo[0]+backinfo[1]*256+2);
;;;376    		memcpy(&backinfo[21],(uint8_t *)&crcdata,2);
;;;377    
;;;378    		if(mqtt_publish( SOCK_TCPS , BAECON_TOPIC , (char *)backinfo , backinfo[0]+backinfo[1]*256+4))
;;;379    		{
;;;380    			#if APP_DEBUG
;;;381    			printf("add beacon write flash error back data:\r\n");
;;;382    		  #endif
;;;383    			return SUCCESS;
;;;384    		}
;;;385    		else
;;;386    		{
;;;387    		  #if APP_DEBUG
;;;388    			printf("add beacon write flash error back data send fail!\r\n");  
;;;389    		  #endif
;;;390    		}
;;;391    		return ERROR;
;;;392    	}
;;;393    
;;;394    	backinfo[12]=0x02;           
;;;395    	crcdata=app_plat_usMBCRC16(backinfo,backinfo[0]+backinfo[1]*256+2);
;;;396    	memcpy(&backinfo[21],(uint8_t *)&crcdata,2);
;;;397    	
;;;398    	if(mqtt_publish( SOCK_TCPS , BAECON_TOPIC , (char *)backinfo , backinfo[0]+backinfo[1]*256+4))
;;;399    	{
;;;400    		return SUCCESS;
;;;401    	}
;;;402    	else
;;;403    	{
;;;404    		#if APP_DEBUG	
;;;405    	  printf("add beacon write flash success back data send fail!\r\n"); 
;;;406    		#endif		
;;;407    	}	 
;;;408    	return SUCCESS;
;;;409    }
0000a0  b01e              ADD      sp,sp,#0x78
0000a2  e8bd81f0          POP      {r4-r8,pc}
                  |L1.166|
0000a6  2001              MOVS     r0,#1                 ;330
0000a8  e7fa              B        |L1.160|
                  |L1.170|
0000aa  1c70              ADDS     r0,r6,#1              ;312
0000ac  b2c6              UXTB     r6,r0                 ;312
                  |L1.174|
0000ae  4842              LDR      r0,|L1.440|
0000b0  38da              SUBS     r0,r0,#0xda           ;312
0000b2  f890005a          LDRB     r0,[r0,#0x5a]         ;312  ; sysCfg
0000b6  42b0              CMP      r0,r6                 ;312
0000b8  dcc8              BGT      |L1.76|
0000ba  483f              LDR      r0,|L1.440|
0000bc  38da              SUBS     r0,r0,#0xda           ;335
0000be  f890105a          LDRB     r1,[r0,#0x5a]         ;335  ; sysCfg
0000c2  305b              ADDS     r0,r0,#0x5b           ;335
0000c4  eb000081          ADD      r0,r0,r1,LSL #2       ;335
0000c8  6829              LDR      r1,[r5,#0]            ;335
0000ca  6001              STR      r1,[r0,#0]            ;335
0000cc  483a              LDR      r0,|L1.440|
0000ce  38da              SUBS     r0,r0,#0xda           ;336
0000d0  f890005a          LDRB     r0,[r0,#0x5a]         ;336  ; sysCfg
0000d4  1c40              ADDS     r0,r0,#1              ;336
0000d6  4938              LDR      r1,|L1.440|
0000d8  39da              SUBS     r1,r1,#0xda           ;336
0000da  f881005a          STRB     r0,[r1,#0x5a]         ;336
0000de  20cf              MOVS     r0,#0xcf              ;337
0000e0  f881004c          STRB     r0,[r1,#0x4c]         ;337
0000e4  225a              MOVS     r2,#0x5a              ;351
0000e6  483d              LDR      r0,|L1.476|
0000e8  f7fffffe          BL       bsp_WriteCpuFlash
0000ec  4604              MOV      r4,r0                 ;351
0000ee  b10c              CBZ      r4,|L1.244|
0000f0  f04f0801          MOV      r8,#1                 ;354
                  |L1.244|
0000f4  225a              MOVS     r2,#0x5a              ;358
0000f6  a906              ADD      r1,sp,#0x18           ;358
0000f8  4838              LDR      r0,|L1.476|
0000fa  f7fffffe          BL       bsp_ReadCpuFlash
0000fe  4604              MOV      r4,r0                 ;358
000100  2c01              CMP      r4,#1                 ;359
000102  d102              BNE      |L1.266|
000104  4680              MOV      r8,r0                 ;361
000106  2000              MOVS     r0,#0                 ;362
000108  e7ca              B        |L1.160|
                  |L1.266|
00010a  225a              MOVS     r2,#0x5a              ;366
00010c  492a              LDR      r1,|L1.440|
00010e  39da              SUBS     r1,r1,#0xda           ;366
000110  a806              ADD      r0,sp,#0x18           ;366
000112  f7fffffe          BL       memcmp
000116  b108              CBZ      r0,|L1.284|
000118  f04f0801          MOV      r8,#1                 ;368
                  |L1.284|
00011c  f1b80f01          CMP      r8,#1                 ;371
000120  d123              BNE      |L1.362|
000122  2001              MOVS     r0,#1                 ;374
000124  f88d000c          STRB     r0,[sp,#0xc]          ;374
000128  f89d2000          LDRB     r2,[sp,#0]            ;375
00012c  f89d0001          LDRB     r0,[sp,#1]            ;375
000130  eb022000          ADD      r0,r2,r0,LSL #8       ;375
000134  1c80              ADDS     r0,r0,#2              ;375
000136  b281              UXTH     r1,r0                 ;375
000138  4668              MOV      r0,sp                 ;375
00013a  f7fffffe          BL       app_plat_usMBCRC16
00013e  901d              STR      r0,[sp,#0x74]         ;375
000140  f8bd0074          LDRH     r0,[sp,#0x74]         ;376
000144  f8ad0015          STRH     r0,[sp,#0x15]         ;376
000148  f89d1000          LDRB     r1,[sp,#0]            ;378
00014c  f89d0001          LDRB     r0,[sp,#1]            ;378
000150  eb012000          ADD      r0,r1,r0,LSL #8       ;378
000154  1d03              ADDS     r3,r0,#4              ;378
000156  466a              MOV      r2,sp                 ;378
000158  a118              ADR      r1,|L1.444|
00015a  2000              MOVS     r0,#0                 ;378
00015c  f7fffffe          BL       mqtt_publish
000160  b108              CBZ      r0,|L1.358|
000162  2001              MOVS     r0,#1                 ;383
000164  e79c              B        |L1.160|
                  |L1.358|
000166  2000              MOVS     r0,#0                 ;391
000168  e79a              B        |L1.160|
                  |L1.362|
00016a  2002              MOVS     r0,#2                 ;394
00016c  f88d000c          STRB     r0,[sp,#0xc]          ;394
000170  f89d2000          LDRB     r2,[sp,#0]            ;395
000174  f89d0001          LDRB     r0,[sp,#1]            ;395
000178  eb022000          ADD      r0,r2,r0,LSL #8       ;395
00017c  1c80              ADDS     r0,r0,#2              ;395
00017e  b281              UXTH     r1,r0                 ;395
000180  4668              MOV      r0,sp                 ;395
000182  f7fffffe          BL       app_plat_usMBCRC16
000186  901d              STR      r0,[sp,#0x74]         ;395
000188  f8bd0074          LDRH     r0,[sp,#0x74]         ;396
00018c  f8ad0015          STRH     r0,[sp,#0x15]         ;396
000190  f89d1000          LDRB     r1,[sp,#0]            ;398
000194  f89d0001          LDRB     r0,[sp,#1]            ;398
000198  eb012000          ADD      r0,r1,r0,LSL #8       ;398
00019c  1d03              ADDS     r3,r0,#4              ;398
00019e  466a              MOV      r2,sp                 ;398
0001a0  a106              ADR      r1,|L1.444|
0001a2  2000              MOVS     r0,#0                 ;398
0001a4  f7fffffe          BL       mqtt_publish
0001a8  b108              CBZ      r0,|L1.430|
0001aa  2001              MOVS     r0,#1                 ;400
0001ac  e778              B        |L1.160|
                  |L1.430|
0001ae  2001              MOVS     r0,#1                 ;408
0001b0  e776              B        |L1.160|
;;;410    
                          ENDP

0001b2  0000              DCW      0x0000
                  |L1.436|
                          DCD      ||.constdata||+0x200
                  |L1.440|
                          DCD      sysCfg+0xda
                  |L1.444|
0001bc  2f696f74          DCB      "/iot_gateway/management/beacon",0
0001c0  5f676174
0001c4  65776179
0001c8  2f6d616e
0001cc  6167656d
0001d0  656e742f
0001d4  62656163
0001d8  6f6e00  
0001db  00                DCB      0
                  |L1.476|
                          DCD      0x0807fe00

                          AREA ||i.app_flash_DeleBeacon||, CODE, READONLY, ALIGN=2

                  app_flash_DeleBeacon PROC
;;;423     */
;;;424    ErrorStatus app_flash_DeleBeacon(uint8_t *beacon,uint8_t *Serialnumber)
000000  e92d43f0          PUSH     {r4-r9,lr}
;;;425    {
000004  b0a1              SUB      sp,sp,#0x84
000006  4607              MOV      r7,r0
000008  4688              MOV      r8,r1
;;;426    	uint8_t i,j,err;
;;;427    	uint16_t crcdata;
;;;428    	uint8_t failfalg=0;
00000a  f04f0900          MOV      r9,#0
;;;429    
;;;430    	uint8_t table[8]={0};
00000e  2000              MOVS     r0,#0
000010  901e              STR      r0,[sp,#0x78]
000012  901f              STR      r0,[sp,#0x7c]
;;;431    	uint8_t checkdata[SYSCFG_DATA_LEN];
;;;432    	uint8_t backinfo[23]={0x13,0x00,0x2a};
000014  2113              MOVS     r1,#0x13
000016  a802              ADD      r0,sp,#8
000018  f7fffffe          BL       __aeabi_memclr4
00001c  4871              LDR      r0,|L2.484|
00001e  6800              LDR      r0,[r0,#0]  ; <Data2>
000020  9001              STR      r0,[sp,#4]
;;;433    
;;;434    	backinfo[2]=BEACONBACK;
000022  204a              MOVS     r0,#0x4a
000024  f88d0006          STRB     r0,[sp,#6]
;;;435    	backinfo[3]=0x02;               /*删除一个考勤信标*/
000028  2002              MOVS     r0,#2
00002a  f88d0007          STRB     r0,[sp,#7]
;;;436    
;;;437      memset(&backinfo[4],0,2);                            /*网关设备ID低字节补齐*/
00002e  2000              MOVS     r0,#0
000030  f8ad0008          STRH     r0,[sp,#8]
;;;438    	memcpy(&backinfo[6],sysCfg.parameter.client_mac,6);  /*网关ID*/
000034  486c              LDR      r0,|L2.488|
000036  6801              LDR      r1,[r0,#0]  ; sysCfg
000038  f8cd100a          STR      r1,[sp,#0xa]
00003c  8880              LDRH     r0,[r0,#4]  ; sysCfg
00003e  f8ad000e          STRH     r0,[sp,#0xe]
;;;439    	memcpy(&backinfo[13],beacon,4);                      /*要删除的地址*/
000042  6838              LDR      r0,[r7,#0]
000044  f8cd0011          STR      r0,[sp,#0x11]
;;;440      memcpy(&backinfo[17],Serialnumber,4);      					 /*流水号*/
000048  f8d80000          LDR      r0,[r8,#0]
00004c  f8cd0015          STR      r0,[sp,#0x15]
;;;441    	
;;;442    	#if APP_DEBUG  /*删除之前的MAC地址列表*/
;;;443    	printf("Dele bea:");
;;;444    	for(i=0;i<4;i++)
;;;445    	{
;;;446    		printf("%02x ",beacon[i]);
;;;447    	}
;;;448    	printf("\r\nbefore delete beacon count:%d list:\r\n",sysCfg.parameter.beacount);
;;;449    	for(i=0;i<sysCfg.parameter.beacount;i++)
;;;450    	{
;;;451    		for(j=0;j<4;j++)
;;;452    		{
;;;453    			printf("%02x ",sysCfg.parameter.bealist[i][j]);
;;;454    		}
;;;455    		printf("\r\n");
;;;456    	}
;;;457    	#endif
;;;458    	
;;;459    	/*检查是否含有该蓝牙基站*/
;;;460    	for(i=0;i<sysCfg.parameter.beacount;i++)
000050  2400              MOVS     r4,#0
000052  e00b              B        |L2.108|
                  |L2.84|
;;;461    	{
;;;462    		/*该蓝牙网关下面含有该蓝牙基站 跳出查找*/
;;;463    		if(0 == memcmp(beacon,sysCfg.parameter.bealist[i],4))
000054  4864              LDR      r0,|L2.488|
000056  387f              SUBS     r0,r0,#0x7f
000058  eb000184          ADD      r1,r0,r4,LSL #2
00005c  2204              MOVS     r2,#4
00005e  4638              MOV      r0,r7
000060  f7fffffe          BL       memcmp
000064  b900              CBNZ     r0,|L2.104|
;;;464    		{
;;;465    		  #if APP_DEBUG
;;;466    			printf("find delete beacon.\r\n");
;;;467    			#endif
;;;468    			break;
000066  e007              B        |L2.120|
                  |L2.104|
000068  1c60              ADDS     r0,r4,#1              ;460
00006a  b2c4              UXTB     r4,r0                 ;460
                  |L2.108|
00006c  485e              LDR      r0,|L2.488|
00006e  38da              SUBS     r0,r0,#0xda           ;460
000070  f890005a          LDRB     r0,[r0,#0x5a]         ;460  ; sysCfg
000074  42a0              CMP      r0,r4                 ;460
000076  dced              BGT      |L2.84|
                  |L2.120|
000078  bf00              NOP      
;;;469    		}
;;;470    	}
;;;471    		
;;;472    	/*没有要删除的蓝牙基站*/
;;;473    	if(i==sysCfg.parameter.beacount)  
00007a  485b              LDR      r0,|L2.488|
00007c  38da              SUBS     r0,r0,#0xda
00007e  f890005a          LDRB     r0,[r0,#0x5a]  ; sysCfg
000082  42a0              CMP      r0,r4
000084  d122              BNE      |L2.204|
;;;474    	{
;;;475    		backinfo[12]=0x00;
000086  2000              MOVS     r0,#0
000088  f88d0010          STRB     r0,[sp,#0x10]
;;;476    		crcdata=app_plat_usMBCRC16(backinfo,backinfo[0]+backinfo[1]*256+2);
00008c  f89d2004          LDRB     r2,[sp,#4]
000090  f89d0005          LDRB     r0,[sp,#5]
000094  eb022000          ADD      r0,r2,r0,LSL #8
000098  1c80              ADDS     r0,r0,#2
00009a  b281              UXTH     r1,r0
00009c  a801              ADD      r0,sp,#4
00009e  f7fffffe          BL       app_plat_usMBCRC16
0000a2  9020              STR      r0,[sp,#0x80]
;;;477    		memcpy(&backinfo[21],(uint8_t *)&crcdata,2);
0000a4  f8bd0080          LDRH     r0,[sp,#0x80]
0000a8  f8ad0019          STRH     r0,[sp,#0x19]
;;;478    		
;;;479    		if(mqtt_publish( SOCK_TCPS , BAECON_TOPIC , (char *)backinfo , backinfo[0]+backinfo[1]*256+4))
0000ac  f89d1004          LDRB     r1,[sp,#4]
0000b0  f89d0005          LDRB     r0,[sp,#5]
0000b4  eb012000          ADD      r0,r1,r0,LSL #8
0000b8  1d03              ADDS     r3,r0,#4
0000ba  aa01              ADD      r2,sp,#4
0000bc  a14b              ADR      r1,|L2.492|
0000be  2000              MOVS     r0,#0
0000c0  f7fffffe          BL       mqtt_publish
;;;480    		{
;;;481    		}
;;;482    		else
;;;483    		{
;;;484    		  #if APP_DEBUG
;;;485    			printf("not have dele beacon back data Send fail!\r\n");  
;;;486    		  #endif
;;;487    		}
;;;488    		return ERROR;
0000c4  2000              MOVS     r0,#0
                  |L2.198|
;;;489    	}
;;;490      
;;;491    	for(j=0;j<(sysCfg.parameter.beacount-i-1);j++)   /*更新beacon列表*/
;;;492    	{
;;;493    		memcpy(table,sysCfg.parameter.bealist[i+j+1],4);
;;;494    		memcpy(sysCfg.parameter.bealist[i+j],table,4);
;;;495    	}
;;;496    	
;;;497    	sysCfg.parameter.beacount--;   /*个数减1*/
;;;498    	sysCfg.parameter.config_hold_flag=CFG_HOLDER;
;;;499    	
;;;500    	#if APP_DEBUG   /*删除后的MAC地址列表*/
;;;501    	printf("after delete beacon count:%d list:\r\n",sysCfg.parameter.beacount);
;;;502    	for(i=0;i<sysCfg.parameter.beacount;i++)
;;;503    	{
;;;504    		for(j=0;j<4;j++)
;;;505    		{
;;;506    			printf("%02x ",sysCfg.parameter.bealist[i][j]);
;;;507    		}
;;;508    		printf("\r\n");
;;;509    	}
;;;510    	#endif
;;;511    
;;;512    	err=bsp_WriteCpuFlash(SYSCFG_ADDR,sysCfg.data,SYSCFG_DATA_LEN);
;;;513    	if(0!=err)      /*flash写入错误*/
;;;514    	{ 
;;;515    		failfalg=1;	
;;;516    	}
;;;517    
;;;518    	/*检查写入数据*/
;;;519    	err=bsp_ReadCpuFlash(SYSCFG_ADDR,checkdata,SYSCFG_DATA_LEN);
;;;520    	if(1==err)
;;;521    	{
;;;522    		failfalg=1;
;;;523    		return ERROR;   /*读取失败*/
;;;524    	}
;;;525    
;;;526    	 if(0 != memcmp(checkdata,sysCfg.data,SYSCFG_DATA_LEN))
;;;527    	 {
;;;528    		 failfalg=1;
;;;529    	}
;;;530    
;;;531    	if(1==failfalg)
;;;532    	{
;;;533    		/*写入数据错误*/
;;;534    		backinfo[12]=0x01;           
;;;535    		crcdata=app_plat_usMBCRC16(backinfo,backinfo[0]+backinfo[1]*256+2);
;;;536    		memcpy(&backinfo[21],(uint8_t *)&crcdata,2);
;;;537    		
;;;538    		if(mqtt_publish( SOCK_TCPS , BAECON_TOPIC , (char *)backinfo , backinfo[0]+backinfo[1]*256+4))
;;;539    		{
;;;540    		  #if APP_DEBUG
;;;541    			printf("delete beacon write flash error back data:\r\n");
;;;542    			for(i=0;i<backinfo[0]+backinfo[1]*256+4;i++)
;;;543    			{
;;;544    				printf("%02x ",backinfo[i]);
;;;545    			}
;;;546    			printf("\r\n");
;;;547    			#endif
;;;548    			return SUCCESS;
;;;549    		}
;;;550    		else
;;;551    		{
;;;552    		  #if APP_DEBUG
;;;553    			printf("delete beacon write flash error back data send fail!\r\n");
;;;554          #endif			
;;;555    		}
;;;556    		return ERROR;
;;;557    	}
;;;558    
;;;559    	backinfo[12]=0x02;
;;;560    	crcdata=app_plat_usMBCRC16(backinfo,backinfo[0]+backinfo[1]*256+2);
;;;561    	memcpy(&backinfo[21],(uint8_t *)&crcdata,2);
;;;562    
;;;563    	if(mqtt_publish( SOCK_TCPS , BAECON_TOPIC , (char *)backinfo , backinfo[0]+backinfo[1]*256+4))
;;;564    	{
;;;565    	} 
;;;566    	else
;;;567    	{
;;;568        #if APP_DEBUG
;;;569    		printf("delete beacon success back data Send fail!\r\n");  
;;;570        #endif
;;;571    	}
;;;572    	 
;;;573    	return SUCCESS;
;;;574    }
0000c6  b021              ADD      sp,sp,#0x84
0000c8  e8bd83f0          POP      {r4-r9,pc}
                  |L2.204|
0000cc  2500              MOVS     r5,#0                 ;491
0000ce  e010              B        |L2.242|
                  |L2.208|
0000d0  1960              ADDS     r0,r4,r5              ;493
0000d2  1c40              ADDS     r0,r0,#1              ;493
0000d4  4944              LDR      r1,|L2.488|
0000d6  397f              SUBS     r1,r1,#0x7f           ;493
0000d8  eb010080          ADD      r0,r1,r0,LSL #2       ;493
0000dc  6800              LDR      r0,[r0,#0]            ;493
0000de  901e              STR      r0,[sp,#0x78]         ;493
0000e0  1961              ADDS     r1,r4,r5              ;494
0000e2  4841              LDR      r0,|L2.488|
0000e4  387f              SUBS     r0,r0,#0x7f           ;494
0000e6  eb000081          ADD      r0,r0,r1,LSL #2       ;494
0000ea  991e              LDR      r1,[sp,#0x78]         ;494
0000ec  6001              STR      r1,[r0,#0]            ;494
0000ee  1c68              ADDS     r0,r5,#1              ;491
0000f0  b2c5              UXTB     r5,r0                 ;491
                  |L2.242|
0000f2  483d              LDR      r0,|L2.488|
0000f4  38da              SUBS     r0,r0,#0xda           ;491
0000f6  f890005a          LDRB     r0,[r0,#0x5a]         ;491  ; sysCfg
0000fa  1b00              SUBS     r0,r0,r4              ;491
0000fc  1e40              SUBS     r0,r0,#1              ;491
0000fe  42a8              CMP      r0,r5                 ;491
000100  dce6              BGT      |L2.208|
000102  4839              LDR      r0,|L2.488|
000104  38da              SUBS     r0,r0,#0xda           ;497
000106  f890005a          LDRB     r0,[r0,#0x5a]         ;497  ; sysCfg
00010a  1e40              SUBS     r0,r0,#1              ;497
00010c  4936              LDR      r1,|L2.488|
00010e  39da              SUBS     r1,r1,#0xda           ;497
000110  f881005a          STRB     r0,[r1,#0x5a]         ;497
000114  20cf              MOVS     r0,#0xcf              ;498
000116  f881004c          STRB     r0,[r1,#0x4c]         ;498
00011a  225a              MOVS     r2,#0x5a              ;512
00011c  483b              LDR      r0,|L2.524|
00011e  f7fffffe          BL       bsp_WriteCpuFlash
000122  4606              MOV      r6,r0                 ;512
000124  b10e              CBZ      r6,|L2.298|
000126  f04f0901          MOV      r9,#1                 ;515
                  |L2.298|
00012a  225a              MOVS     r2,#0x5a              ;519
00012c  a907              ADD      r1,sp,#0x1c           ;519
00012e  4837              LDR      r0,|L2.524|
000130  f7fffffe          BL       bsp_ReadCpuFlash
000134  4606              MOV      r6,r0                 ;519
000136  2e01              CMP      r6,#1                 ;520
000138  d102              BNE      |L2.320|
00013a  4681              MOV      r9,r0                 ;522
00013c  2000              MOVS     r0,#0                 ;523
00013e  e7c2              B        |L2.198|
                  |L2.320|
000140  225a              MOVS     r2,#0x5a              ;526
000142  4929              LDR      r1,|L2.488|
000144  39da              SUBS     r1,r1,#0xda           ;526
000146  a807              ADD      r0,sp,#0x1c           ;526
000148  f7fffffe          BL       memcmp
00014c  b108              CBZ      r0,|L2.338|
00014e  f04f0901          MOV      r9,#1                 ;528
                  |L2.338|
000152  f1b90f01          CMP      r9,#1                 ;531
000156  d123              BNE      |L2.416|
000158  2001              MOVS     r0,#1                 ;534
00015a  f88d0010          STRB     r0,[sp,#0x10]         ;534
00015e  f89d2004          LDRB     r2,[sp,#4]            ;535
000162  f89d0005          LDRB     r0,[sp,#5]            ;535
000166  eb022000          ADD      r0,r2,r0,LSL #8       ;535
00016a  1c80              ADDS     r0,r0,#2              ;535
00016c  b281              UXTH     r1,r0                 ;535
00016e  a801              ADD      r0,sp,#4              ;535
000170  f7fffffe          BL       app_plat_usMBCRC16
000174  9020              STR      r0,[sp,#0x80]         ;535
000176  f8bd0080          LDRH     r0,[sp,#0x80]         ;536
00017a  f8ad0019          STRH     r0,[sp,#0x19]         ;536
00017e  f89d1004          LDRB     r1,[sp,#4]            ;538
000182  f89d0005          LDRB     r0,[sp,#5]            ;538
000186  eb012000          ADD      r0,r1,r0,LSL #8       ;538
00018a  1d03              ADDS     r3,r0,#4              ;538
00018c  aa01              ADD      r2,sp,#4              ;538
00018e  a117              ADR      r1,|L2.492|
000190  2000              MOVS     r0,#0                 ;538
000192  f7fffffe          BL       mqtt_publish
000196  b108              CBZ      r0,|L2.412|
000198  2001              MOVS     r0,#1                 ;548
00019a  e794              B        |L2.198|
                  |L2.412|
00019c  2000              MOVS     r0,#0                 ;556
00019e  e792              B        |L2.198|
                  |L2.416|
0001a0  2002              MOVS     r0,#2                 ;559
0001a2  f88d0010          STRB     r0,[sp,#0x10]         ;559
0001a6  f89d2004          LDRB     r2,[sp,#4]            ;560
0001aa  f89d0005          LDRB     r0,[sp,#5]            ;560
0001ae  eb022000          ADD      r0,r2,r0,LSL #8       ;560
0001b2  1c80              ADDS     r0,r0,#2              ;560
0001b4  b281              UXTH     r1,r0                 ;560
0001b6  a801              ADD      r0,sp,#4              ;560
0001b8  f7fffffe          BL       app_plat_usMBCRC16
0001bc  9020              STR      r0,[sp,#0x80]         ;560
0001be  f8bd0080          LDRH     r0,[sp,#0x80]         ;561
0001c2  f8ad0019          STRH     r0,[sp,#0x19]         ;561
0001c6  f89d1004          LDRB     r1,[sp,#4]            ;563
0001ca  f89d0005          LDRB     r0,[sp,#5]            ;563
0001ce  eb012000          ADD      r0,r1,r0,LSL #8       ;563
0001d2  1d03              ADDS     r3,r0,#4              ;563
0001d4  aa01              ADD      r2,sp,#4              ;563
0001d6  a105              ADR      r1,|L2.492|
0001d8  2000              MOVS     r0,#0                 ;563
0001da  f7fffffe          BL       mqtt_publish
0001de  2001              MOVS     r0,#1                 ;573
0001e0  e771              B        |L2.198|
;;;575    
                          ENDP

0001e2  0000              DCW      0x0000
                  |L2.484|
                          DCD      ||.constdata||+0x204
                  |L2.488|
                          DCD      sysCfg+0xda
                  |L2.492|
0001ec  2f696f74          DCB      "/iot_gateway/management/beacon",0
0001f0  5f676174
0001f4  65776179
0001f8  2f6d616e
0001fc  6167656d
000200  656e742f
000204  62656163
000208  6f6e00  
00020b  00                DCB      0
                  |L2.524|
                          DCD      0x0807fe00

                          AREA ||i.app_flash_GetBeaconList||, CODE, READONLY, ALIGN=2

                  app_flash_GetBeaconList PROC
;;;230     */
;;;231    void app_flash_GetBeaconList(uint8_t *Serialnumber)
000000  b510              PUSH     {r4,lr}
;;;232    {
000002  b0c2              SUB      sp,sp,#0x108
000004  4604              MOV      r4,r0
;;;233    	uint16_t crcdata,i;
;;;234    	uint8_t bealistinfo[256];
;;;235    	
;;;236    	bealistinfo[0]=(sysCfg.parameter.beacount*4+11)%256;  /*数据区长度（高）*/
000006  4936              LDR      r1,|L3.224|
000008  f891105a          LDRB     r1,[r1,#0x5a]  ; sysCfg
00000c  220b              MOVS     r2,#0xb
00000e  eb020081          ADD      r0,r2,r1,LSL #2
000012  17c1              ASRS     r1,r0,#31
000014  eb006111          ADD      r1,r0,r1,LSR #24
000018  1209              ASRS     r1,r1,#8
00001a  eba02101          SUB      r1,r0,r1,LSL #8
00001e  b2c9              UXTB     r1,r1
000020  f88d1004          STRB     r1,[sp,#4]
;;;237    	bealistinfo[1]=(sysCfg.parameter.beacount*4+11)/256;  /*数据区长度（低）*/
000024  492e              LDR      r1,|L3.224|
000026  f891105a          LDRB     r1,[r1,#0x5a]  ; sysCfg
00002a  eb020081          ADD      r0,r2,r1,LSL #2
00002e  17c1              ASRS     r1,r0,#31
000030  eb006111          ADD      r1,r0,r1,LSR #24
000034  1209              ASRS     r1,r1,#8
000036  f88d1005          STRB     r1,[sp,#5]
;;;238    	
;;;239    	bealistinfo[2]=BEACONBACK;    /*消息ID*/
00003a  204a              MOVS     r0,#0x4a
00003c  f88d0006          STRB     r0,[sp,#6]
;;;240      bealistinfo[3]=0x00;          /*获取列表*/
000040  2000              MOVS     r0,#0
000042  f88d0007          STRB     r0,[sp,#7]
;;;241    
;;;242      memset(&bealistinfo[4],0,2);                           	/*网关设备ID低字节补齐*/
000046  f8ad0008          STRH     r0,[sp,#8]
;;;243    	memcpy(&bealistinfo[6],sysCfg.parameter.client_mac,6); 	/*网关ID*/
00004a  4825              LDR      r0,|L3.224|
00004c  30da              ADDS     r0,r0,#0xda
00004e  6801              LDR      r1,[r0,#0]  ; sysCfg
000050  f8cd100a          STR      r1,[sp,#0xa]
000054  8880              LDRH     r0,[r0,#4]  ; sysCfg
000056  f8ad000e          STRH     r0,[sp,#0xe]
;;;244    	bealistinfo[12]=sysCfg.parameter.beacount;              /*考勤信标个数*/
00005a  4821              LDR      r0,|L3.224|
00005c  f890005a          LDRB     r0,[r0,#0x5a]  ; sysCfg
000060  f88d0010          STRB     r0,[sp,#0x10]
;;;245      memcpy(&bealistinfo[13],(uint8_t *)sysCfg.parameter.bealist,sysCfg.parameter.beacount*4);
000064  481e              LDR      r0,|L3.224|
000066  f890005a          LDRB     r0,[r0,#0x5a]  ; sysCfg
00006a  0082              LSLS     r2,r0,#2
00006c  491c              LDR      r1,|L3.224|
00006e  315b              ADDS     r1,r1,#0x5b
000070  f10d0011          ADD      r0,sp,#0x11
000074  f7fffffe          BL       __aeabi_memcpy
;;;246    	memcpy(&bealistinfo[sysCfg.parameter.beacount*4+13],Serialnumber,4);            /*流水号*/
000078  4819              LDR      r0,|L3.224|
00007a  f890005a          LDRB     r0,[r0,#0x5a]  ; sysCfg
00007e  210d              MOVS     r1,#0xd
000080  eb010080          ADD      r0,r1,r0,LSL #2
000084  a901              ADD      r1,sp,#4
000086  4408              ADD      r0,r0,r1
000088  6821              LDR      r1,[r4,#0]
00008a  6001              STR      r1,[r0,#0]
;;;247    	
;;;248    	crcdata=app_plat_usMBCRC16(bealistinfo,bealistinfo[0]+bealistinfo[1]*256+2);    /*CRC校验*/
00008c  f89d2004          LDRB     r2,[sp,#4]
000090  f89d0005          LDRB     r0,[sp,#5]
000094  eb022000          ADD      r0,r2,r0,LSL #8
000098  1c80              ADDS     r0,r0,#2
00009a  b281              UXTH     r1,r0
00009c  a801              ADD      r0,sp,#4
00009e  f7fffffe          BL       app_plat_usMBCRC16
0000a2  9041              STR      r0,[sp,#0x104]
;;;249    	memcpy(&bealistinfo[bealistinfo[0]+bealistinfo[1]*256+2],(uint8_t *)&crcdata,2);
0000a4  f89d1004          LDRB     r1,[sp,#4]
0000a8  f89d0005          LDRB     r0,[sp,#5]
0000ac  eb012000          ADD      r0,r1,r0,LSL #8
0000b0  1c80              ADDS     r0,r0,#2
0000b2  a901              ADD      r1,sp,#4
0000b4  4408              ADD      r0,r0,r1
0000b6  f8bd1104          LDRH     r1,[sp,#0x104]
0000ba  8001              STRH     r1,[r0,#0]
;;;250    	if(!mqtt_publish( SOCK_TCPS , BAECON_TOPIC , (char *)bealistinfo , bealistinfo[0]+bealistinfo[1]*256+4))
0000bc  f89d1004          LDRB     r1,[sp,#4]
0000c0  f89d0005          LDRB     r0,[sp,#5]
0000c4  eb012000          ADD      r0,r1,r0,LSL #8
0000c8  1d03              ADDS     r3,r0,#4
0000ca  aa01              ADD      r2,sp,#4
0000cc  a105              ADR      r1,|L3.228|
0000ce  2000              MOVS     r0,#0
0000d0  f7fffffe          BL       mqtt_publish
0000d4  b908              CBNZ     r0,|L3.218|
                  |L3.214|
;;;251    	{
;;;252    		return;
;;;253    	}
;;;254    	
;;;255    	#if APP_DEBUG
;;;256    	printf("beacount:%d Send beacon list data:\r\n",sysCfg.parameter.beacount);
;;;257    	for(i=0;i<bealistinfo[0]+bealistinfo[1]*256+4;i++)
;;;258    	{
;;;259    		printf("%02x ",bealistinfo[i]);
;;;260    	}
;;;261    	printf("\r\n");
;;;262    	#endif
;;;263    }
0000d6  b042              ADD      sp,sp,#0x108
0000d8  bd10              POP      {r4,pc}
                  |L3.218|
0000da  bf00              NOP      
0000dc  e7fb              B        |L3.214|
;;;264    
                          ENDP

0000de  0000              DCW      0x0000
                  |L3.224|
                          DCD      sysCfg
                  |L3.228|
0000e4  2f696f74          DCB      "/iot_gateway/management/beacon",0
0000e8  5f676174
0000ec  65776179
0000f0  2f6d616e
0000f4  6167656d
0000f8  656e742f
0000fc  62656163
000100  6f6e00  
000103  00                DCB      0

                          AREA ||i.app_flash_GetSTM32MCUID||, CODE, READONLY, ALIGN=2

                  app_flash_GetSTM32MCUID PROC
;;;32      */
;;;33     static void app_flash_GetSTM32MCUID(uint32_t *id,MCUTypedef type)
000000  b170              CBZ      r0,|L4.32|
;;;34     {
;;;35     	 if(id!=NULL)
;;;36     	 {
;;;37     		 id[0]=*(uint32_t*)(idAddr[type]);
000002  4a08              LDR      r2,|L4.36|
000004  f8522021          LDR      r2,[r2,r1,LSL #2]
000008  6812              LDR      r2,[r2,#0]
00000a  6002              STR      r2,[r0,#0]
;;;38     		 id[1]=*(uint32_t*)(idAddr[type]+4);
00000c  4a05              LDR      r2,|L4.36|
00000e  f8522021          LDR      r2,[r2,r1,LSL #2]
000012  6852              LDR      r2,[r2,#4]
000014  6042              STR      r2,[r0,#4]
;;;39     		 id[2]=*(uint32_t*)(idAddr[type]+8);
000016  4a03              LDR      r2,|L4.36|
000018  f8522021          LDR      r2,[r2,r1,LSL #2]
00001c  6892              LDR      r2,[r2,#8]
00001e  6082              STR      r2,[r0,#8]
                  |L4.32|
;;;40     	 } 
;;;41     }
000020  4770              BX       lr
;;;42     
                          ENDP

000022  0000              DCW      0x0000
                  |L4.36|
                          DCD      idAddr

                          AREA ||i.app_flash_LoadSysConfig||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                  app_flash_LoadSysConfig PROC
;;;63      */
;;;64     ErrorStatus app_flash_LoadSysConfig(void)
000000  b530              PUSH     {r4,r5,lr}
;;;65     { 
000002  b093              SUB      sp,sp,#0x4c
;;;66     	uint8_t tmp;
;;;67     	uint8_t errcode;
;;;68     
;;;69     	uint32_t addr[3] = {0};	
000004  2000              MOVS     r0,#0
000006  9010              STR      r0,[sp,#0x40]
000008  9011              STR      r0,[sp,#0x44]
00000a  9012              STR      r0,[sp,#0x48]
;;;70     	uint8_t mac_id[12] = {0};
00000c  900d              STR      r0,[sp,#0x34]
00000e  900e              STR      r0,[sp,#0x38]
000010  900f              STR      r0,[sp,#0x3c]
;;;71     	uint8_t client_mac[6] = {0};
000012  900b              STR      r0,[sp,#0x2c]
000014  900c              STR      r0,[sp,#0x30]
;;;72     	
;;;73     	char DeviceID[16]={0};
000016  9007              STR      r0,[sp,#0x1c]
000018  9008              STR      r0,[sp,#0x20]
00001a  9009              STR      r0,[sp,#0x24]
00001c  900a              STR      r0,[sp,#0x28]
;;;74     	
;;;75     	#if APP_DEBUG
;;;76     	printf("Load system config...%d\r\n",SYSCFG_DATA_LEN);
;;;77     	#endif
;;;78     	
;;;79     	/*读取配置参数*/
;;;80     	errcode = bsp_ReadCpuFlash(SYSCFG_ADDR,sysCfg.data,SYSCFG_DATA_LEN);
00001e  225a              MOVS     r2,#0x5a
000020  4980              LDR      r1,|L5.548|
000022  4881              LDR      r0,|L5.552|
000024  f7fffffe          BL       bsp_ReadCpuFlash
000028  4604              MOV      r4,r0
;;;81     	if(1 == errcode)
00002a  2c01              CMP      r4,#1
00002c  d102              BNE      |L5.52|
;;;82     	{
;;;83     		#if APP_DEBUG
;;;84     		printf("ReadSysConfig:Read list fail.\r\n");
;;;85     		#endif
;;;86     		return ERROR;  
00002e  2000              MOVS     r0,#0
                  |L5.48|
;;;87     	} 
;;;88     
;;;89     	app_flash_GetSTM32MCUID(addr,STM32F1);
;;;90     	memcpy(mac_id,(uint8_t *)&addr,sizeof(mac_id));
;;;91     		
;;;92     	/*获取设备ID*/
;;;93     	#if 1   
;;;94     	memcpy(client_mac,mac_id,6);
;;;95     	for(uint8_t i = 0; i < 6; i++ )
;;;96     	{
;;;97     		client_mac[i] ^= mac_id[6+i];
;;;98     	}
;;;99     	#else
;;;100    	memcpy(client_mac,&mac_id[8],3);
;;;101    	client_mac[3] = mac_id[5];
;;;102    	
;;;103      tmp = mac_id[0];
;;;104    	tmp <<= 4;
;;;105    	tmp &= 0xf0;
;;;106    	mac_id[2] &= 0x0f;
;;;107    	tmp |= mac_id[2];
;;;108    	client_mac[4] = tmp;
;;;109    
;;;110      tmp = mac_id[6];
;;;111    	tmp <<= 4;
;;;112    	tmp &= 0xf0;
;;;113    	mac_id[7] &= 0x0f;
;;;114    	tmp |= mac_id[7];
;;;115    	client_mac[5] = tmp;	
;;;116    	#endif
;;;117    	
;;;118    	client_mac[0] &= 0xfe;   /*第一个字节为偶数*/
;;;119    	memcpy(sysCfg.parameter.client_mac,client_mac,6);
;;;120    	
;;;121    	sysCfg.parameter.register_flag = UNREGISTER;
;;;122    	sysCfg.parameter.connect_state = DISCONNECT;
;;;123    	
;;;124    	/*考勤信标个数*/                          
;;;125    	if(sysCfg.parameter.beacount > 25)
;;;126    	{
;;;127        #if 0
;;;128    		printf("ReadSysConfig:beacount over limit.\r\n");
;;;129    		#endif
;;;130    		sysCfg.parameter.beacount = 0;
;;;131    	}
;;;132    
;;;133    	if(  (0 == memcmp(sysCfg.parameter.server_ip,default_server_ip,sizeof(default_server_ip)))
;;;134    		&& (0 == strncmp((char *)sysCfg.parameter.server_user,default_server_user,strlen(default_server_user))) 
;;;135    		&& (0 == strncmp((char *)sysCfg.parameter.server_user,default_server_user,strlen((char *)sysCfg.parameter.server_user))) 
;;;136    		&& (0 == strncmp((char *)sysCfg.parameter.server_pass,default_server_pass,strlen(default_server_pass)))
;;;137    		&& (0 == strncmp((char *)sysCfg.parameter.server_pass,default_server_pass,strlen((char *)sysCfg.parameter.server_pass))))
;;;138    	{
;;;139    		sysCfg.parameter.config_hold_flag = 0xff;
;;;140    	}
;;;141    	
;;;142    	/*没有被修改过，使用默认配置参数*/
;;;143    	if(sysCfg.parameter.config_hold_flag != CFG_HOLDER)   
;;;144    	{
;;;145    		/*拷贝默认配置*/
;;;146    		memcpy(sysCfg.parameter.server_ip,default_server_ip,4);
;;;147    		sysCfg.parameter.server_port = SERVER_PORT;		
;;;148    		
;;;149    		memcpy(sysCfg.parameter.server_user,default_server_user,strlen(default_server_user));
;;;150    		memcpy(sysCfg.parameter.server_pass,default_server_pass,strlen(default_server_pass));
;;;151    		
;;;152    		sysCfg.parameter.server_user[strlen(default_server_user)] = '\0';
;;;153    		sysCfg.parameter.server_pass[strlen(default_server_pass)] = '\0';
;;;154    			 
;;;155    		sysCfg.parameter.data_socket = SOCK_TCPS;
;;;156    		
;;;157    		#if APP_DEBUG
;;;158    		printf("Use default config.\r\n");
;;;159    		#endif
;;;160    	}
;;;161    	else
;;;162    	{
;;;163    		#if APP_DEBUG
;;;164    		printf("Use flash config.\r\n");
;;;165    		#endif
;;;166    		sysCfg.parameter.data_socket = SOCK_TCP;
;;;167    	}
;;;168    
;;;169    	sysCfg.parameter.client_port = CLIENT_PORT;
;;;170    	
;;;171    	sprintf(DeviceID,"%02x%02x%02x%02x%02x%02x%02x%02x",0,0,sysCfg.parameter.client_mac[0],sysCfg.parameter.client_mac[1],
;;;172    	sysCfg.parameter.client_mac[2],sysCfg.parameter.client_mac[3],sysCfg.parameter.client_mac[4],sysCfg.parameter.client_mac[5]);
;;;173    	
;;;174    	memcpy(sysCfg.parameter.client_id,DeviceID,sizeof(DeviceID));	
;;;175    	sysCfg.parameter.client_id[sizeof(DeviceID)] = '\0';
;;;176    	
;;;177    	/*订阅消息中加入设备信息*/  	        
;;;178    	memcpy(&sms_topic[7],DeviceID,sizeof(DeviceID));  	        
;;;179    	memcpy(&userinfo_topic[7],DeviceID,sizeof(DeviceID));
;;;180    	memcpy(&bleupdata_topic[7],DeviceID,sizeof(DeviceID));
;;;181    	memcpy(&gateupdata_topic[7],DeviceID,sizeof(DeviceID));
;;;182    	memcpy(&devcfgpara_topic[7],DeviceID,sizeof(DeviceID));
;;;183      //memcpy(&beaconmanagement_topic[7],DeviceID,sizeof(DeviceID));
;;;184    	memcpy(&bracelet_topic[7],DeviceID,sizeof(DeviceID));
;;;185    	memcpy(&gatereset_topic[7],DeviceID,sizeof(DeviceID));
;;;186    	
;;;187    	#if APP_DEBUG
;;;188    	/*打印设置参数*/
;;;189    	printf("server IP:");
;;;190    	for(uint8_t i=0;i<3;i++)
;;;191    	{
;;;192    		printf("%d",sysCfg.parameter.server_ip[i]);
;;;193    		printf(".");
;;;194    	}
;;;195    	printf("%d",sysCfg.parameter.server_ip[3]);
;;;196    	
;;;197    	printf("      PORT:%d",sysCfg.parameter.server_port);
;;;198    	printf("\r\n");
;;;199    	
;;;200    	printf("server username:%s\r\n",sysCfg.parameter.server_user);
;;;201    	printf("server password:%s\r\n",sysCfg.parameter.server_pass);
;;;202    	
;;;203    	printf("Client 	MAC:");
;;;204    	for(uint8_t i=0;i<6;i++)
;;;205    	{
;;;206    		printf("%02x ",sysCfg.parameter.client_mac[i]);
;;;207    	}
;;;208    	printf("\r\n");
;;;209    	
;;;210    	printf("Client id:%s\r\n",sysCfg.parameter.client_id);
;;;211    	printf("Hardware version:%s\r\n",HARDWARE_VERSION);
;;;212    	printf("Software version:%s\r\n",SOFTWARE_VERSION);
;;;213    	
;;;214    	printf("Ready to init net...\r\n");
;;;215    	#endif
;;;216    
;;;217    	return SUCCESS;
;;;218    }
000030  b013              ADD      sp,sp,#0x4c
000032  bd30              POP      {r4,r5,pc}
                  |L5.52|
000034  2101              MOVS     r1,#1                 ;89
000036  a810              ADD      r0,sp,#0x40           ;89
000038  f7fffffe          BL       app_flash_GetSTM32MCUID
00003c  a810              ADD      r0,sp,#0x40           ;90
00003e  c807              LDM      r0,{r0-r2}            ;90
000040  ab0d              ADD      r3,sp,#0x34           ;90
000042  c307              STM      r3!,{r0-r2}           ;90
000044  e9dd010d          LDRD     r0,r1,[sp,#0x34]      ;94
000048  e9cd010b          STRD     r0,r1,[sp,#0x2c]      ;94
00004c  2000              MOVS     r0,#0                 ;95
00004e  e009              B        |L5.100|
                  |L5.80|
000050  a90b              ADD      r1,sp,#0x2c           ;97
000052  5c09              LDRB     r1,[r1,r0]            ;97
000054  1d82              ADDS     r2,r0,#6              ;97
000056  ab0d              ADD      r3,sp,#0x34           ;97
000058  5c9a              LDRB     r2,[r3,r2]            ;97
00005a  4051              EORS     r1,r1,r2              ;97
00005c  aa0b              ADD      r2,sp,#0x2c           ;97
00005e  5411              STRB     r1,[r2,r0]            ;97
000060  1c41              ADDS     r1,r0,#1              ;95
000062  b2c8              UXTB     r0,r1                 ;95
                  |L5.100|
000064  2806              CMP      r0,#6                 ;95
000066  dbf3              BLT      |L5.80|
000068  f89d002c          LDRB     r0,[sp,#0x2c]         ;118
00006c  f00000fe          AND      r0,r0,#0xfe           ;118
000070  f88d002c          STRB     r0,[sp,#0x2c]         ;118
000074  486b              LDR      r0,|L5.548|
000076  30da              ADDS     r0,r0,#0xda           ;119
000078  990b              LDR      r1,[sp,#0x2c]         ;119
00007a  6001              STR      r1,[r0,#0]            ;119  ; sysCfg
00007c  f8bd1030          LDRH     r1,[sp,#0x30]         ;119
000080  8081              STRH     r1,[r0,#4]            ;119
000082  2000              MOVS     r0,#0                 ;121
000084  4967              LDR      r1,|L5.548|
000086  f88100e0          STRB     r0,[r1,#0xe0]         ;121
00008a  f88100bf          STRB     r0,[r1,#0xbf]         ;122
00008e  4608              MOV      r0,r1                 ;125
000090  f890005a          LDRB     r0,[r0,#0x5a]         ;125  ; sysCfg
000094  2819              CMP      r0,#0x19              ;125
000096  dd02              BLE      |L5.158|
000098  2000              MOVS     r0,#0                 ;130
00009a  f881005a          STRB     r0,[r1,#0x5a]         ;130
                  |L5.158|
00009e  2204              MOVS     r2,#4                 ;133
0000a0  4962              LDR      r1,|L5.556|
0000a2  4860              LDR      r0,|L5.548|
0000a4  f7fffffe          BL       memcmp
0000a8  bb88              CBNZ     r0,|L5.270|
0000aa  4861              LDR      r0,|L5.560|
0000ac  f7fffffe          BL       strlen
0000b0  4605              MOV      r5,r0                 ;134
0000b2  462a              MOV      r2,r5                 ;134
0000b4  495e              LDR      r1,|L5.560|
0000b6  485b              LDR      r0,|L5.548|
0000b8  1d00              ADDS     r0,r0,#4              ;134
0000ba  f7fffffe          BL       strncmp
0000be  bb30              CBNZ     r0,|L5.270|
0000c0  4858              LDR      r0,|L5.548|
0000c2  1d00              ADDS     r0,r0,#4              ;135
0000c4  f7fffffe          BL       strlen
0000c8  4605              MOV      r5,r0                 ;135
0000ca  462a              MOV      r2,r5                 ;135
0000cc  4958              LDR      r1,|L5.560|
0000ce  4855              LDR      r0,|L5.548|
0000d0  1d00              ADDS     r0,r0,#4              ;135
0000d2  f7fffffe          BL       strncmp
0000d6  b9d0              CBNZ     r0,|L5.270|
0000d8  4856              LDR      r0,|L5.564|
0000da  f7fffffe          BL       strlen
0000de  4605              MOV      r5,r0                 ;136
0000e0  462a              MOV      r2,r5                 ;136
0000e2  4954              LDR      r1,|L5.564|
0000e4  484f              LDR      r0,|L5.548|
0000e6  3018              ADDS     r0,r0,#0x18           ;136
0000e8  f7fffffe          BL       strncmp
0000ec  b978              CBNZ     r0,|L5.270|
0000ee  484d              LDR      r0,|L5.548|
0000f0  3018              ADDS     r0,r0,#0x18           ;137
0000f2  f7fffffe          BL       strlen
0000f6  4605              MOV      r5,r0                 ;137
0000f8  462a              MOV      r2,r5                 ;137
0000fa  494e              LDR      r1,|L5.564|
0000fc  4849              LDR      r0,|L5.548|
0000fe  3018              ADDS     r0,r0,#0x18           ;137
000100  f7fffffe          BL       strncmp
000104  b918              CBNZ     r0,|L5.270|
000106  20ff              MOVS     r0,#0xff              ;139
000108  4946              LDR      r1,|L5.548|
00010a  f881004c          STRB     r0,[r1,#0x4c]         ;139
                  |L5.270|
00010e  4845              LDR      r0,|L5.548|
000110  f890004c          LDRB     r0,[r0,#0x4c]         ;143  ; sysCfg
000114  28cf              CMP      r0,#0xcf              ;143
000116  d02f              BEQ      |L5.376|
000118  4842              LDR      r0,|L5.548|
00011a  4944              LDR      r1,|L5.556|
00011c  6809              LDR      r1,[r1,#0]            ;146  ; default_server_ip
00011e  6001              STR      r1,[r0,#0]            ;146  ; sysCfg
000120  f240705b          MOV      r0,#0x75b             ;147
000124  493f              LDR      r1,|L5.548|
000126  f8a1004a          STRH     r0,[r1,#0x4a]         ;147
00012a  4841              LDR      r0,|L5.560|
00012c  f7fffffe          BL       strlen
000130  4605              MOV      r5,r0                 ;149
000132  462a              MOV      r2,r5                 ;149
000134  493e              LDR      r1,|L5.560|
000136  483b              LDR      r0,|L5.548|
000138  1d00              ADDS     r0,r0,#4              ;149
00013a  f7fffffe          BL       __aeabi_memcpy
00013e  483d              LDR      r0,|L5.564|
000140  f7fffffe          BL       strlen
000144  4605              MOV      r5,r0                 ;150
000146  462a              MOV      r2,r5                 ;150
000148  493a              LDR      r1,|L5.564|
00014a  4836              LDR      r0,|L5.548|
00014c  3018              ADDS     r0,r0,#0x18           ;150
00014e  f7fffffe          BL       __aeabi_memcpy
000152  4837              LDR      r0,|L5.560|
000154  f7fffffe          BL       strlen
000158  4932              LDR      r1,|L5.548|
00015a  1d09              ADDS     r1,r1,#4              ;152
00015c  2200              MOVS     r2,#0                 ;152
00015e  540a              STRB     r2,[r1,r0]            ;152
000160  4834              LDR      r0,|L5.564|
000162  f7fffffe          BL       strlen
000166  492f              LDR      r1,|L5.548|
000168  3118              ADDS     r1,r1,#0x18           ;153
00016a  2200              MOVS     r2,#0                 ;153
00016c  540a              STRB     r2,[r1,r0]            ;153
00016e  2000              MOVS     r0,#0                 ;155
000170  3918              SUBS     r1,r1,#0x18           ;155
000172  f88100c0          STRB     r0,[r1,#0xc0]         ;155
000176  e003              B        |L5.384|
                  |L5.376|
000178  2001              MOVS     r0,#1                 ;166
00017a  492a              LDR      r1,|L5.548|
00017c  f88100c0          STRB     r0,[r1,#0xc0]         ;166
                  |L5.384|
000180  f44f707a          MOV      r0,#0x3e8             ;169
000184  4927              LDR      r1,|L5.548|
000186  f8a100c2          STRH     r0,[r1,#0xc2]         ;169
00018a  4608              MOV      r0,r1                 ;171
00018c  f89000df          LDRB     r0,[r0,#0xdf]         ;171
000190  f89110de          LDRB     r1,[r1,#0xde]         ;171
000194  4a23              LDR      r2,|L5.548|
000196  f89220dd          LDRB     r2,[r2,#0xdd]         ;171
00019a  4b22              LDR      r3,|L5.548|
00019c  f89330dc          LDRB     r3,[r3,#0xdc]         ;171
0001a0  e9cd3202          STRD     r3,r2,[sp,#8]         ;171
0001a4  e9cd1004          STRD     r1,r0,[sp,#0x10]      ;171
0001a8  481e              LDR      r0,|L5.548|
0001aa  f89000db          LDRB     r0,[r0,#0xdb]         ;171
0001ae  491d              LDR      r1,|L5.548|
0001b0  f89110da          LDRB     r1,[r1,#0xda]         ;171  ; sysCfg
0001b4  2300              MOVS     r3,#0                 ;171
0001b6  461a              MOV      r2,r3                 ;171
0001b8  e9cd1000          STRD     r1,r0,[sp,#0]         ;171
0001bc  a11e              ADR      r1,|L5.568|
0001be  a807              ADD      r0,sp,#0x1c           ;171
0001c0  f7fffffe          BL       __2sprintf
0001c4  2210              MOVS     r2,#0x10              ;174
0001c6  a907              ADD      r1,sp,#0x1c           ;174
0001c8  4816              LDR      r0,|L5.548|
0001ca  30c8              ADDS     r0,r0,#0xc8           ;174
0001cc  f7fffffe          BL       __aeabi_memcpy
0001d0  2100              MOVS     r1,#0                 ;175
0001d2  4814              LDR      r0,|L5.548|
0001d4  f88010d8          STRB     r1,[r0,#0xd8]         ;175
0001d8  2210              MOVS     r2,#0x10              ;178
0001da  a907              ADD      r1,sp,#0x1c           ;178
0001dc  481f              LDR      r0,|L5.604|
0001de  f7fffffe          BL       __aeabi_memcpy
0001e2  2210              MOVS     r2,#0x10              ;179
0001e4  a907              ADD      r1,sp,#0x1c           ;179
0001e6  481e              LDR      r0,|L5.608|
0001e8  f7fffffe          BL       __aeabi_memcpy
0001ec  2210              MOVS     r2,#0x10              ;180
0001ee  a907              ADD      r1,sp,#0x1c           ;180
0001f0  481c              LDR      r0,|L5.612|
0001f2  f7fffffe          BL       __aeabi_memcpy
0001f6  2210              MOVS     r2,#0x10              ;181
0001f8  a907              ADD      r1,sp,#0x1c           ;181
0001fa  481b              LDR      r0,|L5.616|
0001fc  f7fffffe          BL       __aeabi_memcpy
000200  2210              MOVS     r2,#0x10              ;182
000202  a907              ADD      r1,sp,#0x1c           ;182
000204  4819              LDR      r0,|L5.620|
000206  f7fffffe          BL       __aeabi_memcpy
00020a  2210              MOVS     r2,#0x10              ;184
00020c  a907              ADD      r1,sp,#0x1c           ;184
00020e  4818              LDR      r0,|L5.624|
000210  f7fffffe          BL       __aeabi_memcpy
000214  2210              MOVS     r2,#0x10              ;185
000216  a907              ADD      r1,sp,#0x1c           ;185
000218  4816              LDR      r0,|L5.628|
00021a  f7fffffe          BL       __aeabi_memcpy
00021e  2001              MOVS     r0,#1                 ;217
000220  e706              B        |L5.48|
;;;219    
                          ENDP

000222  0000              DCW      0x0000
                  |L5.548|
                          DCD      sysCfg
                  |L5.552|
                          DCD      0x0807fe00
                  |L5.556|
                          DCD      default_server_ip
                  |L5.560|
                          DCD      default_server_user
                  |L5.564|
                          DCD      default_server_pass
                  |L5.568|
000238  25303278          DCB      "%02x%02x%02x%02x%02x%02x%02x%02x",0
00023c  25303278
000240  25303278
000244  25303278
000248  25303278
00024c  25303278
000250  25303278
000254  25303278
000258  00      
000259  00                DCB      0
00025a  00                DCB      0
00025b  00                DCB      0
                  |L5.604|
                          DCD      sms_topic+0x7
                  |L5.608|
                          DCD      userinfo_topic+0x7
                  |L5.612|
                          DCD      bleupdata_topic+0x7
                  |L5.616|
                          DCD      gateupdata_topic+0x7
                  |L5.620|
                          DCD      devcfgpara_topic+0x7
                  |L5.624|
                          DCD      bracelet_topic+0x7
                  |L5.628|
                          DCD      gatereset_topic+0x7

                          AREA ||i.delay_ms||, CODE, READONLY, ALIGN=1

                  delay_ms PROC
;;;43     /*软延时*/
;;;44     void delay_ms(u16 time)
000000  2100              MOVS     r1,#0
;;;45     {    
;;;46     	 uint16_t i=0;  
;;;47     	 while(time--)
000002  e007              B        |L6.20|
                  |L6.4|
;;;48     	 {
;;;49     			i=12000;  
000004  f64261e0          MOV      r1,#0x2ee0
;;;50     			while(i--);    
000008  bf00              NOP      
                  |L6.10|
00000a  1e0a              SUBS     r2,r1,#0
00000c  f1a10301          SUB      r3,r1,#1
000010  b299              UXTH     r1,r3
000012  d1fa              BNE      |L6.10|
                  |L6.20|
000014  1e02              SUBS     r2,r0,#0              ;47
000016  f1a00301          SUB      r3,r0,#1              ;47
00001a  b298              UXTH     r0,r3                 ;47
00001c  d1f2              BNE      |L6.4|
;;;51     	 }
;;;52     }
00001e  4770              BX       lr
;;;53     
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=1

                  sysCfg
                          %        236

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  aucCRCHi
000000  00c18140          DCB      0x00,0xc1,0x81,0x40
000004  01c08041          DCB      0x01,0xc0,0x80,0x41
000008  01c08041          DCB      0x01,0xc0,0x80,0x41
00000c  00c18140          DCB      0x00,0xc1,0x81,0x40
000010  01c08041          DCB      0x01,0xc0,0x80,0x41
000014  00c18140          DCB      0x00,0xc1,0x81,0x40
000018  00c18140          DCB      0x00,0xc1,0x81,0x40
00001c  01c08041          DCB      0x01,0xc0,0x80,0x41
000020  01c08041          DCB      0x01,0xc0,0x80,0x41
000024  00c18140          DCB      0x00,0xc1,0x81,0x40
000028  00c18140          DCB      0x00,0xc1,0x81,0x40
00002c  01c08041          DCB      0x01,0xc0,0x80,0x41
000030  00c18140          DCB      0x00,0xc1,0x81,0x40
000034  01c08041          DCB      0x01,0xc0,0x80,0x41
000038  01c08041          DCB      0x01,0xc0,0x80,0x41
00003c  00c18140          DCB      0x00,0xc1,0x81,0x40
000040  01c08041          DCB      0x01,0xc0,0x80,0x41
000044  00c18140          DCB      0x00,0xc1,0x81,0x40
000048  00c18140          DCB      0x00,0xc1,0x81,0x40
00004c  01c08041          DCB      0x01,0xc0,0x80,0x41
000050  00c18140          DCB      0x00,0xc1,0x81,0x40
000054  01c08041          DCB      0x01,0xc0,0x80,0x41
000058  01c08041          DCB      0x01,0xc0,0x80,0x41
00005c  00c18140          DCB      0x00,0xc1,0x81,0x40
000060  00c18140          DCB      0x00,0xc1,0x81,0x40
000064  01c08041          DCB      0x01,0xc0,0x80,0x41
000068  01c08041          DCB      0x01,0xc0,0x80,0x41
00006c  00c18140          DCB      0x00,0xc1,0x81,0x40
000070  01c08041          DCB      0x01,0xc0,0x80,0x41
000074  00c18140          DCB      0x00,0xc1,0x81,0x40
000078  00c18140          DCB      0x00,0xc1,0x81,0x40
00007c  01c08041          DCB      0x01,0xc0,0x80,0x41
000080  01c08041          DCB      0x01,0xc0,0x80,0x41
000084  00c18140          DCB      0x00,0xc1,0x81,0x40
000088  00c18140          DCB      0x00,0xc1,0x81,0x40
00008c  01c08041          DCB      0x01,0xc0,0x80,0x41
000090  00c18140          DCB      0x00,0xc1,0x81,0x40
000094  01c08041          DCB      0x01,0xc0,0x80,0x41
000098  01c08041          DCB      0x01,0xc0,0x80,0x41
00009c  00c18140          DCB      0x00,0xc1,0x81,0x40
0000a0  00c18140          DCB      0x00,0xc1,0x81,0x40
0000a4  01c08041          DCB      0x01,0xc0,0x80,0x41
0000a8  01c08041          DCB      0x01,0xc0,0x80,0x41
0000ac  00c18140          DCB      0x00,0xc1,0x81,0x40
0000b0  01c08041          DCB      0x01,0xc0,0x80,0x41
0000b4  00c18140          DCB      0x00,0xc1,0x81,0x40
0000b8  00c18140          DCB      0x00,0xc1,0x81,0x40
0000bc  01c08041          DCB      0x01,0xc0,0x80,0x41
0000c0  00c18140          DCB      0x00,0xc1,0x81,0x40
0000c4  01c08041          DCB      0x01,0xc0,0x80,0x41
0000c8  01c08041          DCB      0x01,0xc0,0x80,0x41
0000cc  00c18140          DCB      0x00,0xc1,0x81,0x40
0000d0  01c08041          DCB      0x01,0xc0,0x80,0x41
0000d4  00c18140          DCB      0x00,0xc1,0x81,0x40
0000d8  00c18140          DCB      0x00,0xc1,0x81,0x40
0000dc  01c08041          DCB      0x01,0xc0,0x80,0x41
0000e0  01c08041          DCB      0x01,0xc0,0x80,0x41
0000e4  00c18140          DCB      0x00,0xc1,0x81,0x40
0000e8  00c18140          DCB      0x00,0xc1,0x81,0x40
0000ec  01c08041          DCB      0x01,0xc0,0x80,0x41
0000f0  00c18140          DCB      0x00,0xc1,0x81,0x40
0000f4  01c08041          DCB      0x01,0xc0,0x80,0x41
0000f8  01c08041          DCB      0x01,0xc0,0x80,0x41
0000fc  00c18140          DCB      0x00,0xc1,0x81,0x40
                  aucCRCLo
000100  00c0c101          DCB      0x00,0xc0,0xc1,0x01
000104  c30302c2          DCB      0xc3,0x03,0x02,0xc2
000108  c60607c7          DCB      0xc6,0x06,0x07,0xc7
00010c  05c5c404          DCB      0x05,0xc5,0xc4,0x04
000110  cc0c0dcd          DCB      0xcc,0x0c,0x0d,0xcd
000114  0fcfce0e          DCB      0x0f,0xcf,0xce,0x0e
000118  0acacb0b          DCB      0x0a,0xca,0xcb,0x0b
00011c  c90908c8          DCB      0xc9,0x09,0x08,0xc8
000120  d81819d9          DCB      0xd8,0x18,0x19,0xd9
000124  1bdbda1a          DCB      0x1b,0xdb,0xda,0x1a
000128  1ededf1f          DCB      0x1e,0xde,0xdf,0x1f
00012c  dd1d1cdc          DCB      0xdd,0x1d,0x1c,0xdc
000130  14d4d515          DCB      0x14,0xd4,0xd5,0x15
000134  d71716d6          DCB      0xd7,0x17,0x16,0xd6
000138  d21213d3          DCB      0xd2,0x12,0x13,0xd3
00013c  11d1d010          DCB      0x11,0xd1,0xd0,0x10
000140  f03031f1          DCB      0xf0,0x30,0x31,0xf1
000144  33f3f232          DCB      0x33,0xf3,0xf2,0x32
000148  36f6f737          DCB      0x36,0xf6,0xf7,0x37
00014c  f53534f4          DCB      0xf5,0x35,0x34,0xf4
000150  3cfcfd3d          DCB      0x3c,0xfc,0xfd,0x3d
000154  ff3f3efe          DCB      0xff,0x3f,0x3e,0xfe
000158  fa3a3bfb          DCB      0xfa,0x3a,0x3b,0xfb
00015c  39f9f838          DCB      0x39,0xf9,0xf8,0x38
000160  28e8e929          DCB      0x28,0xe8,0xe9,0x29
000164  eb2b2aea          DCB      0xeb,0x2b,0x2a,0xea
000168  ee2e2fef          DCB      0xee,0x2e,0x2f,0xef
00016c  2dedec2c          DCB      0x2d,0xed,0xec,0x2c
000170  e42425e5          DCB      0xe4,0x24,0x25,0xe5
000174  27e7e626          DCB      0x27,0xe7,0xe6,0x26
000178  22e2e323          DCB      0x22,0xe2,0xe3,0x23
00017c  e12120e0          DCB      0xe1,0x21,0x20,0xe0
000180  a06061a1          DCB      0xa0,0x60,0x61,0xa1
000184  63a3a262          DCB      0x63,0xa3,0xa2,0x62
000188  66a6a767          DCB      0x66,0xa6,0xa7,0x67
00018c  a56564a4          DCB      0xa5,0x65,0x64,0xa4
000190  6cacad6d          DCB      0x6c,0xac,0xad,0x6d
000194  af6f6eae          DCB      0xaf,0x6f,0x6e,0xae
000198  aa6a6bab          DCB      0xaa,0x6a,0x6b,0xab
00019c  69a9a868          DCB      0x69,0xa9,0xa8,0x68
0001a0  78b8b979          DCB      0x78,0xb8,0xb9,0x79
0001a4  bb7b7aba          DCB      0xbb,0x7b,0x7a,0xba
0001a8  be7e7fbf          DCB      0xbe,0x7e,0x7f,0xbf
0001ac  7dbdbc7c          DCB      0x7d,0xbd,0xbc,0x7c
0001b0  b47475b5          DCB      0xb4,0x74,0x75,0xb5
0001b4  77b7b676          DCB      0x77,0xb7,0xb6,0x76
0001b8  72b2b373          DCB      0x72,0xb2,0xb3,0x73
0001bc  b17170b0          DCB      0xb1,0x71,0x70,0xb0
0001c0  50909151          DCB      0x50,0x90,0x91,0x51
0001c4  93535292          DCB      0x93,0x53,0x52,0x92
0001c8  96565797          DCB      0x96,0x56,0x57,0x97
0001cc  55959454          DCB      0x55,0x95,0x94,0x54
0001d0  9c5c5d9d          DCB      0x9c,0x5c,0x5d,0x9d
0001d4  5f9f9e5e          DCB      0x5f,0x9f,0x9e,0x5e
0001d8  5a9a9b5b          DCB      0x5a,0x9a,0x9b,0x5b
0001dc  99595898          DCB      0x99,0x59,0x58,0x98
0001e0  88484989          DCB      0x88,0x48,0x49,0x89
0001e4  4b8b8a4a          DCB      0x4b,0x8b,0x8a,0x4a
0001e8  4e8e8f4f          DCB      0x4e,0x8e,0x8f,0x4f
0001ec  8d4d4c8c          DCB      0x8d,0x4d,0x4c,0x8c
0001f0  44848545          DCB      0x44,0x84,0x85,0x45
0001f4  87474686          DCB      0x87,0x47,0x46,0x86
0001f8  82424383          DCB      0x82,0x42,0x43,0x83
0001fc  41818040          DCB      0x41,0x81,0x80,0x40
000200  13002a00          DCB      0x13,0x00,0x2a,0x00
000204  13002a00          DCB      0x13,0x00,0x2a,0x00

                          AREA ||.data||, DATA, ALIGN=2

                  xHandleTaskUserIF
                          DCD      0x00000000
                  xHandleCheckNet
                          DCD      0x00000000
                  xHandleTaskWEB
                          DCD      0x00000000
                  xHandleTaskMsgPro
                          DCD      0x00000000
                  xHandleTaskStart
                          DCD      0x00000000
                  xSemaphore
                          DCD      0x00000000
                  xMutex
                          DCD      0x00000000
                  xPingTimers
                          DCD      0x00000000
                  xNoNetTimers
                          DCD      0x00000000
                  xCreatedEventGroup
                          DCD      0x00000000
                  xUpdataEventGroup
                          DCD      0x00000000
                  xQueue1
                          DCD      0x00000000
                  default_server_user
000030  43644761          DCB      0x43,0x64,0x47,0x61
000034  74657761          DCB      0x74,0x65,0x77,0x61
000038  7900              DCB      0x79,0x00
                  default_server_pass
00003a  3064              DCB      0x30,0x64
00003c  32666635          DCB      0x32,0x66,0x66,0x35
000040  39373064          DCB      0x39,0x37,0x30,0x64
000044  31633437          DCB      0x31,0x63,0x34,0x37
000048  35396136          DCB      0x35,0x39,0x61,0x36
00004c  61646533          DCB      0x61,0x64,0x65,0x33
000050  32646133          DCB      0x32,0x64,0x61,0x33
000054  30383636          DCB      0x30,0x38,0x36,0x36
000058  616200            DCB      0x61,0x62,0x00
                  default_server_ip
00005b  8b                DCB      0x8b
00005c  9f854c00          DCB      0x9f,0x85,0x4c,0x00
                  idAddr
                          DCD      0x1ffff7ac
                          DCD      0x1ffff7e8
                          DCD      0x1fff7a10
                          DCD      0x1ffff7ac
                          DCD      0x1fff7a10
                          DCD      0x1ff0f420
                          DCD      0x1ff80050
                          DCD      0x1ff80050
                          DCD      0x1fff7590
                          DCD      0x1ff0f420

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\app\\src\\app_flash.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___11_app_flash_c_sysCfg____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___11_app_flash_c_sysCfg____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___11_app_flash_c_sysCfg____REVSH|
#line 128
|__asm___11_app_flash_c_sysCfg____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
